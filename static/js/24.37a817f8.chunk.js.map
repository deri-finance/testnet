{"version":3,"sources":["utils/DeriNumberFormat.js","components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/faild.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","div","inputWidth","inputHeight","unitPadding","Input","unit","unitTip","max","step","onChange","styles","disableNegtive","focus","placeholder","minTradeVolume","decimal","readOnly","disabled","onBlur","onFocus","inputRef","useRef","current","setCustomValidity","style","type","title","onKeyPress","evt","which","preventDefault","ref","e","regStr","reg","RegExp","target","gt","integerValue","filter","substring","indexOf","tip","text","Spinner","class","Operate","lang","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","isApprove","setIsApprove","isValid","setIsValid","isFaild","setIsFaild","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","a","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","isUnlocked","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","FaildLogo","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","getValid","fromChainId","toString","getBalance","to_arr","from_one","p","from_two","from_three","disabledDown","up","down","map","item","index","Init","JSON","parse","stringify","select_from","arrow","select_to","deriLogo","rel","href"],"mappings":"ySAOMA,EAAUC,YAAOC,IAAPD,CAAH,8CACD,SAAAE,GAAK,OAAIA,EAAMC,KAAV,IAEXC,EAAWJ,IAAOK,KAAV,6DACF,SAAAH,GAAK,MAAI,MAAMI,KAAKJ,EAAMC,OAASD,EAAMC,MAAhC,UAA2CD,EAAMC,MAAjD,KAAJ,IACJ,SAAAD,GAAK,MAAI,MAAMI,KAAKJ,EAAMK,QAAUL,EAAMK,OAAjC,UAA6CL,EAAMK,OAAnD,KAAJ,IAqDHC,IAnDf,SAA0BN,GACxB,MAAwCO,mBAAS,sBAAMC,UAAU,kBAAjE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EAAa,WACjB,IAAQC,EAAcd,EAAdc,UACR,MAA+B,WAAvB,YAAOd,EAAMe,aAAsCC,IAAhBhB,EAAMe,OAAuC,KAAhBf,EAAMe,QAAiBE,MAAMjB,EAAMe,QAA0B,QAAhBf,EAAMe,OACzF,IAA3BG,KAAKC,IAAInB,EAAMe,SAA+B,IAAdD,CACxC,EACKM,EAAa,SAAAL,GAAK,OAAIA,GAASA,EAAMM,QAAQ,MAAO,GAAlC,EAyCxB,OAvCAC,qBAAU,WACR,IAAQR,EAAyFd,EAAzFc,UAAmBS,GAAsEvB,EAA9EwB,OAA8ExB,EAAtEuB,mCAA3B,EAAiGvB,EAAnCyB,oBAA9D,MAA6E,KAA7E,EAAsFC,EAAtF,YAAiG1B,EAAjG,GAEA,GAAIa,IAEEa,EAAOC,aAAe,GAAKD,EAAOX,OAAS,gBAAgBX,KAAKsB,EAAOX,SAAWD,GAA0E,KAA3Dc,aAAGF,EAAOX,OAAOc,SAAUH,EAAOC,cAAgB,KACrJD,EAAOC,aAAeG,YAAaZ,KAAKC,IAAIO,EAAOX,QAAU,KAGlC,IAAzBW,EAAOC,cAA4C,KAAlBD,EAAOX,OAAgBD,WACnDY,EAAOC,aAIhBD,EAAOX,MAAQ,WAAWX,KAAKsB,EAAOX,OAASgB,YAAiBL,EAAOX,OAAS,GAAKW,EAAOX,MACxFW,EAAOX,OAAS,WAAWX,KAAKsB,EAAOX,SACzCW,EAAOX,QAAUW,EAAOX,OAAOc,QAAQ,IAEzCnB,EAAgB,cAACb,EAAD,2BAAa6B,GAAb,IAAqBN,WAAYA,EAC/CY,YAAY,OAAOC,mBAAmB,EAAMC,mBAAmB,WAE5D,GAAIvB,EAAW,CACpB,IAAQV,EAAkBD,EAAlBC,MAAOI,EAAWL,EAAXK,OACfK,EAAgB,cAACR,EAAD,CAAUM,UAAU,eAAeP,MAAOA,EAAOI,OAAQA,KACrEkB,GACFX,GAAa,EAEhB,CACD,IAAMuB,EAAUC,OAAOC,YAAW,WAE3BxB,KACHH,EAAgBe,EAEnB,GAAEA,IAAiBC,EAAOX,MAAQ,EAAI,KACvC,OAAO,WACLuB,aAAaH,EACd,CACF,GAAE,CAACnC,EAAMe,MAAOf,EAAM2B,aAAc3B,EAAMuC,SAEpC9B,CACR,C,mIC3DKZ,EAAUC,IAAO0C,IAAV,8bAYD,SAAAxC,GAAK,OAAIA,EAAMyC,UAAV,IACL,SAAAzC,GAAK,OAAIA,EAAM0C,WAAV,IASC,SAAA1C,GAAK,OAAIA,EAAM2C,WAAV,IAGR,SAASC,EAAT,GAAwP,IAAxO7B,EAAuO,EAAvOA,MAAM8B,EAAiO,EAAjOA,KAAKC,EAA4N,EAA5NA,QAAQC,EAAoN,EAApNA,IAAIC,EAAgN,EAAhNA,KAAKC,EAA2M,EAA3MA,SAA2M,IAAlMC,cAAkM,MAAzL,CAAC,EAAwL,MAAtLC,sBAAsL,SAA/JC,EAA+J,EAA/JA,MAA+J,IAAzJC,mBAAyJ,MAA7I,GAA6I,MAA1IV,mBAA0I,MAA5H,OAA4H,EAArHW,EAAqH,EAArHA,eAAqH,IAAtGC,eAAsG,MAA5F,EAA4F,EAA1FC,EAA0F,EAA1FA,SAA0F,IAAjFf,kBAAiF,MAApE,MAAoE,MAA9DC,mBAA8D,MAAlD,OAAkD,EAA3ClC,EAA2C,EAA3CA,UAA2C,IAAjCiD,gBAAiC,SAAhBC,EAAgB,EAAhBA,OAAOC,EAAS,EAATA,QACrPC,EAAWC,iBAAO,MA0CxB,OARAvC,qBAAU,WACRsC,EAASE,QAAQC,kBAAkB,IAChCH,EAASE,SAAWV,GACrBQ,EAASE,QAAQV,OAEpB,GAAC,CAACA,IAID,eAACvD,EAAD,CAAU8C,YAAaA,EAAaF,WAAYA,EAAYC,YAAaA,EAAalC,UAAWA,EAAWwD,MAAK,eAAMd,GAAvH,UACE,uBAAOG,YAAaA,EAAaY,KAAK,SAASC,MAAM,GAAGC,WAhBzC,SAAAC,GACC,KAAdA,EAAIC,OAA8B,IAAdD,EAAIC,OAA6B,IAAdD,EAAIC,QAAgBD,EAAIC,MAAQ,IAAMD,EAAIC,MAAQ,KACzFD,EAAIE,gBAET,EAYmFZ,OAAQA,EAAQC,QAASA,EAASF,SAAYA,EAAU1C,MAAOA,EAAOiC,KAAQ/B,MAAM+B,GAAQ,EAAIA,EAAMuB,IAAKX,EAAUX,SA3C1L,SAAAuB,GACb,IAAMC,EAAM,uBAAmBlB,EAAnB,MACNmB,EAAM,IAAIC,OAAOF,GACf1D,EAAUyD,EAAEI,OAAZ7D,MACR,GAAGgC,GAAOnB,aAAGb,GAAO8D,GAAG9B,GACrBE,GAAYA,EAASF,QAChB,GAAGI,IAAmBpC,EAAQ,GAAKE,MAAMF,IAC9CkC,GAAYA,EAAS,SAChB,GAAGlC,EAAM,CACd,GAAGuC,GAAkB,EACnB,GAAGvC,EAAQuC,GAAiB,EAC1BL,GAAYA,EAASrB,aAAGb,GAAOyB,IAAIc,GAAgBwB,eAAiBxB,QAGpEL,GAAYA,EADOlC,EAAQuC,QAGxB,GAAG,QAAQlD,KAAKW,KAAW2D,EAAItE,KAAKW,GAAO,CAChD,IAAMgE,EAAShE,EAAMiE,UAAU,EAAEjE,EAAMkE,QAAQ,KAAO,EAAI1B,GAC1DN,GAAYA,EAAS8B,EACtB,MACC9B,GAAYA,EAASlC,EAExB,MACCkC,GAAYA,EAASlC,EAExB,EAkB0NyC,SAAUA,IACjO,qBAAKhD,UAAU,OAAf,SAAuBsC,EAAU,cAAC,IAAD,CAAeoC,IAAKpC,EAASqC,KAAMtC,IAAUA,MAGnF,C,yNC9Ec,SAASuC,IACtB,OACE,qBAAKC,MAAM,mBAAX,SACE,qBAAKA,MAAM,YAIhB,C,+BCRc,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,wC,QCA1B,MAA0B,oCCA1B,MAA0B,kCCgB1B,SAASC,EAAT,GAAyI,IAAtHC,EAAqH,EAArHA,KAAM/D,EAA+G,EAA/GA,OAAQgE,EAAuG,EAAvGA,OAAQC,EAA+F,EAA/FA,QAASC,EAAsF,EAAtFA,WAAYC,EAA0E,EAA1EA,QAASC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,kBAC1HC,EAASC,cACTC,EAAQC,cACRC,EAAUC,cAChB,EAAkC/F,oBAAS,GAA3C,mBAAOgG,EAAP,KAAkBC,EAAlB,KACA,EAA8BjG,oBAAS,GAAvC,mBAAOkG,EAAP,KAAgBC,EAAhB,KACA,EAA6BnG,oBAAS,GAAtC,mBAAOoG,EAAP,KAAeC,EAAf,KACA,EAAsCrG,mBAAS,CAAC,GAAhD,mBAAOsG,EAAP,KAAoBC,EAApB,KACA,EAAoCvG,mBAAS,CAAC,GAA9C,mBAAOwG,EAAP,KAAmBC,EAAnB,KACA,EAAwCzG,oBAAS,GAAjD,oBAAO0G,GAAP,MAAqBC,GAArB,MACA,GAA0C3G,mBAAS,cAAC4G,EAAA,EAAD,CAAQlD,KAAMmD,IAAS5G,UAAU,gBAAgB6G,SAAS,KAAKC,MAAO/B,EAAI,WAA7H,qBAAOgC,GAAP,MAAsBC,GAAtB,MACMC,GAAU,WACdjG,EAAOiG,SACR,EACKC,GAAK,uCAAG,4BAAAC,EAAA,0DACRnG,EAAOoG,cADC,gCAEMC,IAASC,QAAQ,2BAA4B,CAACtG,EAAOuG,OAAOC,UAFlE,QAENC,EAFM,QAGFP,QACNlG,EAAO0G,cAAcjC,EAAOgC,EAAIE,YAChCpC,GAAW,IAGbW,EAAWuB,EAAIP,OARL,2CAAH,qDAWLU,GAAI,uCAAG,sBAAAT,EAAA,yDACI,KAAXnC,GAA4B,IAAXA,EADV,uBAETW,EAAMkC,MAAM9C,EAAK,qCAFR,gCAKNC,EAASC,GALH,uBAMTU,EAAMkC,MAAM9C,EAAK,+BANR,6BASNS,EAAkBsC,gBATZ,uBAUTnC,EAAMkC,MAAN,UAAe9C,EAAK,qBAApB,YAA4CgD,EAAU7C,EAAW8C,aAAcjD,GAAMkD,QAArF,YAAgGlD,EAAK,uBAV5F,iCAaXK,GAAW,GACXgB,GAAW,GACXE,EAAe,CACb4B,UAAU,IAhBD,UAkBKb,IAASC,QAAQ,SAAU,CAACtG,EAAOuG,OAAOY,QAASnH,EAAOuG,OAAOC,QAAStC,EAAWkD,WAAYpD,GAAS,CAAEqD,iBAAiB,IAlBlI,eAmBHC,SACNtB,GAAiB,cAACL,EAAA,EAAD,CAAQlD,KAAMmD,IAAS5G,UAAU,gBAAgB8G,MAAO/B,EAAI,cAC7EuB,EAAe,CACb4B,UAAU,EACVK,UAAU,IAEZ3G,OAAO4G,aAAY,WACjBtB,IACD,GAAE,OAEHd,GAAW,GACXhB,GAAW,IA9BF,4CAAH,qDAiCJqD,GAAK,uCAAG,sBAAAtB,EAAA,yDACP3B,EAAkBkD,cADX,uBAEV/C,EAAMkC,MAAN,UAAe9C,EAAK,qBAApB,YAA4CgD,EAAU7C,EAAWkD,WAAYrD,GAAMkD,QAAnF,YAA8FlD,EAAK,uBAFzF,iCAKZ2B,IAAgB,GAChBN,GAAW,GACXI,EAAc,CACZ0B,UAAU,IARA,SAUIb,IAASC,QAAQ,WAAY,CAACtG,EAAOuG,OAAOY,QAASnH,EAAOuG,OAAOC,SAAU,CAAEa,iBAAiB,IAVpG,cAWJC,SACN9B,EAAc,CACZ0B,UAAU,EACVK,UAAU,IAEZvB,GAAiB,cAACL,EAAA,EAAD,CAAQlD,KAAMmD,IAAS5G,UAAU,gBAAgB8G,MAAO/B,EAAI,cAC7EnD,OAAO4G,aAAY,WACjBtB,IACD,GAAE,OAEHR,IAAgB,GAChBN,GAAW,IAtBD,4CAAH,qDAyBLuC,GAAQ,WACZ9C,EAAQ+C,KAAK,UACd,EACKC,GAAO,uCAAG,sBAAA1B,EAAA,sEACIE,IAASC,QAAQ,aAAc,CAACtG,EAAOuG,OAAOY,QAASnH,EAAOuG,OAAOC,SAAU,CAAEa,iBAAiB,IADtG,cAENC,SACNtC,GAAa,GACb8C,OAEA9C,GAAa,GACbL,EAAMkC,MAAM9C,EAAK,mBAPL,2CAAH,qDAUP+D,GAAW,uCAAG,4BAAA3B,EAAA,0DACdnG,EAAOoG,cADO,gCAEKC,IAASC,QAAQ,iBAAkB,CAACtG,EAAOuG,OAAOY,QAASnH,EAAOuG,OAAOC,UAF9E,OAEVuB,EAFU,OAGhB/C,EAAa+C,EAAOC,YAHJ,2CAAH,qDA+CjB,OAzCAlI,qBAAU,WACJE,EAAOoG,gBACT0B,KACA5B,KAEH,GAAE,CAAClG,EAAOuG,OAAQrC,IACnBpE,qBAAU,WACJmF,EACFK,EAAe,CACb4B,UAAU,EACVK,UAAU,EACVU,YAAY,IAELxC,KACTD,EAAc,CACZ0B,UAAU,EACVK,UAAU,EACVU,YAAY,IAEd7D,GAAW,GACXE,EAAU,IAGb,GAAE,CAACW,EAASf,IACbpE,qBAAU,WACR,IAAIoI,EAGAA,EAFAlI,EAAOoG,cACLnB,EACQ,cAACU,EAAA,EAAD,CAAQlD,KAAMmD,IAAS5G,UAAU,gBAAgB8G,MAAO/B,EAAI,MAAWoE,QAASV,KAChF1C,EAEFU,GACE,yBAAQzG,UAAU,WAAWmJ,QAASR,GAAtC,cAA8C,qBAAKS,IAAI,GAAGC,IAAKC,IAA/D,IAA2EvE,EAAI,SAA/E,OAEA,cAAC4B,EAAA,EAAD,CAAQlD,KAAMmD,IAAS5G,UAAU,gBAAgB8G,MAAO/B,EAAI,KAAUoE,QAASvB,KAJ/E,cAACjB,EAAA,EAAD,CAAQlD,KAAMmD,IAAS5G,UAAU,gBAAgB8G,MAAO/B,EAAI,QAAaoE,QAASN,KAOpF,cAAClC,EAAA,EAAD,CAAQlD,KAAMmD,IAAS5G,UAAU,gBAAgB8G,MAAO/B,EAAK,kBAAmBoE,QAASlC,KAErGD,GAAiBkC,EAClB,GAAE,CAACjD,EAASjF,EAAOuG,OAAQxB,EAAWf,EAAQE,EAAYM,EAAkBiB,KAE3E,sBAAKzG,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACG+E,EAAI,OADP,IACoBC,EADpB,UACmCD,EAAI,KAASwE,cADhD,IACgErE,EAAWsE,aAD3E,IAC0FzE,EAAI,GAAOwE,cADrG,IACqHrE,EAAWuE,cAEhI,qBAAKzJ,UAAU,MAAf,SACG+G,KAEH,sBAAK/G,UAAU,OAAf,WACImF,GAAW,sBAAKnF,UAAU,UAAf,UACX,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoJ,IAAI,GAAGC,IAAKnB,OAC7C,sBAAKlI,UAAU,aAAf,UAA6B+E,EAAK,4BAAlC,UAEF,sBAAK/E,UAAU,aAAf,UACGqF,GAAW,mCACTgB,EAAY6B,SAAW,qBAAKlI,UAAU,UAAf,SACtB,qBAAKoJ,IAAI,GAAGC,IAAKC,MACV,qBAAKtJ,UAAU,UAAf,SACL,cAAC4E,EAAD,SAGJS,IAAYc,GAAW,qBAAKnG,UAAU,UACvCmG,GAAW,8BAAK,qBAAKkD,IAAKK,EAAWN,IAAI,aAG9C,sBAAKpJ,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoJ,IAAI,GAAGC,IAAKd,OAC7C,qBAAKvI,UAAU,aAAf,SAA6B+E,EAAK,mCAEpC,sBAAK/E,UAAU,aAAf,UACGqF,GAAW,mCACTgB,EAAY6B,UAAY,mCACtB7B,EAAYkC,SAAW,qBAAKvI,UAAU,UAAf,SACtB,qBAAKoJ,IAAI,GAAGC,IAAKC,MACV,qBAAKtJ,UAAU,UAAf,SACL,cAAC4E,EAAD,YAILS,IAAYgB,EAAY6B,WAAa,qBAAKlI,UAAU,gBAG3D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoJ,IAAI,GAAGC,IAAKJ,OAC7C,qBAAKjJ,UAAU,aAAf,SAA6B+E,EAAK,sBAEpC,sBAAK/E,UAAU,aAAf,UACGqF,GAAW,mCACTgB,EAAY6B,UAAY7B,EAAYkC,UAAY,mCAC9ClC,EAAY4C,WAAa,qBAAKjJ,UAAU,UAAf,SACxB,qBAAKoJ,IAAI,GAAGC,IAAKC,MACV,qBAAKtJ,UAAU,UAAf,SACL,cAAC4E,EAAD,YAKLS,IAAYgB,EAAYkC,WAAa,qBAAKvI,UAAU,mBAI5DmF,GAAW,sBAAKnF,UAAU,WAAf,UACV,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoJ,IAAI,GAAGC,IAAKnB,OAC7C,qBAAKlI,UAAU,aAAf,SAA6B+E,EAAK,uBAEpC,sBAAK/E,UAAU,aAAf,UACGyG,IAAgB,mCACdF,EAAW2B,SAAW,qBAAKlI,UAAU,UAAf,SACrB,qBAAKoJ,IAAI,GAAGC,IAAKC,MACV,qBAAKtJ,UAAU,UAAf,SACL,cAAC4E,EAAD,SAGJ6B,KAAiBN,GAAW,qBAAKnG,UAAU,UAC5CmG,GAAW,8BAAK,qBAAKkD,IAAKK,EAAWN,IAAI,aAG9C,sBAAKpJ,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoJ,IAAI,GAAGC,IAAKd,OAC7C,sBAAKvI,UAAU,aAAf,UAA6B+E,EAAK,8BAAlC,UAEF,sBAAK/E,UAAU,aAAf,UACGyG,IAAgB,mCACdF,EAAW2B,UAAY,mCACrB3B,EAAWgC,SAAW,qBAAKvI,UAAU,UAAf,SACrB,qBAAKoJ,IAAI,GAAGC,IAAKC,MACV,qBAAKtJ,UAAU,UAAf,SACL,cAAC4E,EAAD,YAIL6B,KAAiBF,EAAW2B,WAAa,qBAAKlI,UAAU,gBAG/D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoJ,IAAI,GAAGC,IAAKJ,OAC7C,qBAAKjJ,UAAU,aAAf,SAA6B+E,EAAI,cAEnC,sBAAK/E,UAAU,aAAf,UACGyG,IAAgB,mCACdF,EAAW2B,UAAY3B,EAAWgC,UAAY,mCAC5ChC,EAAW0C,WAAa,qBAAKjJ,UAAU,UAAf,SACvB,qBAAKoJ,IAAI,GAAGC,IAAKC,MACV,qBAAKtJ,UAAU,UAAf,SACL,cAAC4E,EAAD,YAKL6B,KAAiBF,EAAWgC,WAAa,qBAAKvI,UAAU,wBAOxE,CACD,SAAS+H,EAAUI,EAASpD,GAE1B,IAAI4E,EAAM,CAAC,EACX,OAFAxB,GAAWA,GAGT,KAAK,EACHwB,EAAI1B,QAAUlD,EAAI,SAClB4E,EAAIxB,QAAU,EACdwB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAI1B,QAAUlD,EAAI,IAClB4E,EAAIxB,QAAU,GACdwB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAI1B,QAAUlD,EAAI,KAClB4E,EAAIxB,QAAU,IACdwB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAI1B,QAAUlD,EAAK,eACnB4E,EAAIxB,QAAU,GACdwB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAI1B,QAAUlD,EAAI,QAClB4E,EAAIxB,QAAU,EACdwB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAI1B,QAAUlD,EAAK,gBACnB4E,EAAIxB,QAAU,IACdwB,EAAIC,IAAMG,UAKd,OAAOJ,CACR,C,cClUc,MAA0B,uCCA1B,MAA0B,0C,6DC6TzC,SAAS5B,EAAUI,EAASpD,GAE1B,IAAI4E,EAAM,CAAC,EACX,OAFAxB,GAAWA,GAGT,KAAK,EACHwB,EAAI1B,QAAUlD,EAAI,SAClB4E,EAAIxB,QAAU,EACdwB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAI1B,QAAUlD,EAAI,IAClB4E,EAAIxB,QAAU,GACdwB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAI1B,QAAUlD,EAAI,KAClB4E,EAAIxB,QAAU,IACdwB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAI1B,QAAUlD,EAAK,eACnB4E,EAAIxB,QAAU,GACdwB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAI1B,QAAUlD,EAAI,QAClB4E,EAAIxB,QAAU,EACdwB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAI1B,QAAUlD,EAAK,gBACnB4E,EAAIxB,QAAU,IACdwB,EAAIC,IAAMG,UAKd,OAAOJ,CACR,CACcK,sBAAO,SAAPA,CAAiBC,aAnVhC,YAAmC,IAAjBjJ,EAAgB,EAAhBA,OAAQ+D,EAAQ,EAARA,KACxB,EAA4BhF,mBAAS,IAArC,mBAAOiF,EAAP,KAAeM,EAAf,KACA,EAA8BvF,mBAAS,GAAvC,mBAAOkF,EAAP,KAAgBiF,EAAhB,KACMC,EAA0B,SAAlBC,UAAQC,MAChBC,EAAeH,EACnB,CACE,CACExF,KAAMI,EAAI,QACVwF,GAAI,EACJX,IAAKC,WAEP,CACElF,KAAMI,EAAK,eACXwF,GAAI,GACJX,IAAKE,WAEP,CACEnF,KAAMI,EAAK,gBACXwF,GAAI,IACJX,IAAKG,YAGP,CAEA,CACEpF,KAAMI,EAAI,SACVwF,GAAI,EACJX,IAAKC,WAEP,CACElF,KAAMI,EAAI,IACVwF,GAAI,GACJX,IAAKE,WAEP,CACEnF,KAAMI,EAAI,KACVwF,GAAI,IACJX,IAAKG,YAKX,EAAgChK,mBAASuK,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA4B1K,mBAASuK,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA8B5K,oBAAS,GAAvC,mBAAOsF,EAAP,KAAgBD,EAAhB,KACA,EAAoCrF,mBAASoK,EAC3C,CACEnC,aAAc,GACdwB,aAAczE,EAAK,eACnBqD,WAAY,EACZqB,WAAY1E,EAAI,SACd,CACFiD,aAAc,EACdwB,aAAczE,EAAI,SAClBqD,WAAY,GACZqB,WAAY1E,EAAI,MAVpB,mBAAOG,EAAP,KAAmB0F,EAAnB,KAYA,EAA8B7K,oBAAS,GAAvC,mBAAOoF,EAAP,KAAgBI,EAAhB,KACA,EAAkDxF,oBAAS,GAA3D,oBAAO8K,GAAP,MAA0BC,GAA1B,MACA,GAA8C/K,oBAAS,GAAvD,qBAAOgL,GAAP,MAAwBC,GAAxB,MACA,GAAgCjL,mBAASgI,EAAU7C,EAAW8C,aAAcjD,GAAM6E,KAAlF,qBAAOqB,GAAP,MAAiBC,GAAjB,MACA,GAA4BnL,mBAASgI,EAAU7C,EAAWkD,WAAYrD,GAAM6E,KAA5E,qBAAOuB,GAAP,MAAeC,GAAf,MACMC,GAAsBC,IAAW,oBAAqB,CAAE,KAAQT,KAChEU,GAAoBD,IAAW,kBAAmB,CAAE,KAAQP,KAClE,GAAkDhL,mBAChD,CACE+H,iBAAiB,EACjBY,eAAe,IAHnB,qBAAOlD,GAAP,MAA0BgG,GAA1B,MA6BMC,GAAQ,uCAAG,4BAAAtE,EAAA,0DACXnG,EAAOoG,cADI,gCAEGC,IAASC,QAAQ,2BAA4B,CAACtG,EAAOuG,OAAOC,UAF/D,QAETC,EAFS,QAGLP,QACN0D,EAAc,CACZ5C,aAAcP,EAAIiE,YAClBlC,aAAczB,EAAUN,EAAIiE,YAAa3G,GAAMkD,QAC/CG,WAAYX,EAAIE,UAChB8B,WAAY1B,EAAUN,EAAIE,UAAW5C,GAAMkD,UAE7CiD,GAAYnD,EAAUN,EAAIiE,YAAa3G,GAAM6E,KAC7CwB,GAAUrD,EAAUN,EAAIE,UAAW5C,GAAM6E,KACzCtE,EAAUlE,aAAGqG,EAAIzC,QAAS,IAAI2G,YAC9BvG,EAAWqC,EAAIP,QAbJ,2CAAH,qDAkBR0E,GAAU,uCAAG,4BAAAzE,EAAA,0DACbnG,EAAOoG,cADM,gCAECC,IAASC,QAAQ,iBAAkB,CAACtG,EAAOuG,OAAOY,QAASnH,EAAOuG,OAAOC,UAF1E,OAEXC,EAFW,OAGfyC,EAAWzC,GAHI,2CAAH,qDAoEhB,OA7DA3G,qBAAU,WACR8K,IACD,GAAE,CAAC5K,EAAOuG,OAAQrC,IAEnBpE,qBAAU,WACR2K,IACD,GAAE,CAACzK,EAAOuG,SAgCXzG,qBAAU,WACR,IACI+K,EACAC,EAAWxB,EAAa/F,QAAO,SAAAwH,GAAC,OAAIA,EAAExB,MAAQrF,EAAW8C,YAAzB,IAAuC,GACvEgE,EAAW1B,EAAa/F,QAAO,SAAAwH,GAAC,OAAIA,EAAExB,MAAQrF,EAAW8C,YAAzB,IAAuC,GACvEiE,EAAa3B,EAAa/F,QAAO,SAAAwH,GAAC,OAAIA,EAAExB,MAAQrF,EAAW8C,YAAzB,IAAuC,GAK7E6D,EAAS,CAJIvB,EAAa/F,QAAO,SAAAwH,GAAC,OAAIA,EAAExB,MAAQrF,EAAWkD,UAAzB,IAAqC,GAC1DkC,EAAa/F,QAAO,SAAAwH,GAAC,OAAIA,EAAExB,MAAQrF,EAAWkD,UAAzB,IAAqC,GACxDkC,EAAa/F,QAAO,SAAAwH,GAAC,OAAIA,EAAExB,MAAQrF,EAAWkD,UAAzB,IAAqC,IAGzEqC,EAFW,CAACqB,EAAUE,EAAUC,IAGhCtB,EAAUkB,GACVX,GAAYnD,EAAU7C,EAAW8C,aAAcjD,GAAM6E,KACrDwB,GAAUrD,EAAU7C,EAAWkD,WAAYrD,GAAM6E,KApG/B,WAClB,IAAI9B,IAAkB9G,EAAOoG,gBAAkBpG,EAAOuG,OAAOY,WAAajD,EAAW8C,aACjFU,IAAgB1H,EAAOoG,gBAAkBpG,EAAOuG,OAAOY,WAAajD,EAAWkD,WAKnFoD,GAJU,CACR1D,gBAAiBA,EACjBY,cAAeA,GAGlB,CA6FCtB,EAED,GAAE,CAAClC,EAAYlE,EAAOuG,SAOrB,qBAAKvH,UAAU,iBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACG+E,EAAI,SAEP,qBAAK/E,UAAU,aAAf,SACG+E,EAAK,mBAGV,sBAAK/E,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBAAf,SACG+E,EAAK,qBAER,sBAAK/E,UAAU,yBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACG+E,EAAI,OAEP,sBAAK/E,UAAU,qBAAf,UACE,sBAAKA,UAAWqF,EAAU,qBAAuB,OAAQ8D,QAAS,WAxH5E9D,GAGJyF,IAAsBD,GAqHkF,EAA1F,UACE,sBAAK7K,UAAU,yBAAf,UACE,qBAAKqJ,IAAK4B,GAAU7B,IAAI,KACxB,+BAAOlE,EAAWsE,eAClB,qBAAKxJ,UAAWmF,EAAU,iBAAoBK,GAAkBsC,gBAAmC,YAAjB,eAAlF,UACK3C,GAAWK,GAAkBsC,gBAAmB/C,EAAI,UAAgBA,EAAI,iBAG/E,qBAAK/E,UAAU,YAAYqJ,IAAKhE,EAAU6G,EAAerB,GAAoBsB,UAAKC,UAAMhD,IAAI,QAE9F,oBAAIpJ,UAAWqL,GAAf,SACGb,EAAS6B,KAAI,SAACC,EAAMC,GACnB,OACE,mCACGrH,EAAWsE,eAAiB8C,EAAK3H,KAAO,oBAAgB3E,UAAU,YAAYmJ,QAAS,kBAzF5F,SAAAQ,GAClB,IAAI6C,EAAOC,KAAKC,MAAMD,KAAKE,UAAUzH,IACjCsH,EAAKpE,aAAeuB,EAAIY,IAC1BiC,EAAKxE,aAAe9C,EAAWkD,WAC/BoE,EAAKhD,aAAetE,EAAWuE,WAC/B+C,EAAKpE,WAAalD,EAAW8C,aAC7BwE,EAAK/C,WAAavE,EAAWsE,eAE7BgD,EAAKxE,aAAe2B,EAAIY,GACxBiC,EAAKhD,aAAeG,EAAIhF,MAE1BiG,EAAc4B,GACd1B,IAAsBD,GACvB,CA4EqH+B,CAAYN,EAAlB,EAA/C,SACvC,sBAAKtM,UAAU,kBAAf,UACE,qBAAKoJ,IAAI,GAAGC,IAAKiD,EAAK1C,MADxB,IACgC,qCAAQ0C,EAAK3H,KAAb,WAFgB4H,GAI1C,IAGb,YAIP,qBAAKvM,UAAU,QAAf,SACE,qBAAKqJ,IAAKwD,EAAOzD,IAAI,OAEvB,sBAAKpJ,UAAU,aAAf,UACE,qBAAKA,UAAU,WAAf,SACG+E,EAAI,KAEP,sBAAK/E,UAAU,mBAAf,UACE,sBAAKA,UAAWqF,EAAU,qBAAuB,OAAQ8D,QAAS,WAnJ5E9D,GAGJ2F,IAAoBD,GAgJkF,EAAxF,UACE,sBAAK/K,UAAU,yBAAf,UACE,qBAAKqJ,IAAK8B,GAAQ/B,IAAI,KACtB,+BAAOlE,EAAWuE,aAClB,qBAAKzJ,UAAYmF,EAA8BK,GAAkBkD,cAAiC,YAAjB,eAAtD,iBAA3B,SACIvD,GAAWK,GAAkBkD,cAAiB3D,EAAI,UAAgBA,EAAI,iBAG5E,qBAAK/E,UAAU,YAAYqJ,IAAKhE,EAAU6G,EAAenB,GAAkBoB,UAAKC,UAAMhD,IAAI,QAE5F,oBAAIpJ,UAAWuL,GAAf,SACGb,EAAO2B,KAAI,SAACC,EAAMC,GACjB,OACE,mCACGrH,EAAWuE,aAAe6C,EAAK3H,KAAO,oBAAgB3E,UAAU,YAAYmJ,QAAS,kBA5G5F,SAAAQ,GAChB,IAAI6C,EAAOC,KAAKC,MAAMD,KAAKE,UAAUzH,IACjCsH,EAAKxE,eAAiB2B,EAAIY,IAC5BiC,EAAKxE,aAAe9C,EAAWkD,WAC/BoE,EAAKhD,aAAetE,EAAWuE,WAC/B+C,EAAKpE,WAAalD,EAAW8C,aAC7BwE,EAAK/C,WAAavE,EAAWsE,eAE7BgD,EAAKpE,WAAauB,EAAIY,GACtBiC,EAAK/C,WAAaE,EAAIhF,MAExBiG,EAAc4B,GACdxB,IAAoBD,GAErB,CA8FmH+B,CAAUR,EAAhB,EAA/C,SACrC,sBAAKtM,UAAU,kBAAf,UACE,qBAAKoJ,IAAI,GAAGC,IAAKiD,EAAK1C,MADxB,IACgC,qCAAQ0C,EAAK3H,KAAb,WAFc4H,GAIxC,IAGb,kBAMX,sBAAKvM,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACG+E,EAAK,gBAER,sBAAK/E,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAACoC,EAAA,EAAD,CAAOS,YAAY,IAAItC,MAAOyE,EAAQvC,SA5FlC,SAAClC,GACjB+E,EAAU/E,EACX,EA0FwEwC,QAAS,GAAIE,SAAUoC,EAASrF,UAAU,cACrG,iCAAM,qBAAKoJ,IAAI,GAAGC,IAAK0D,UAAU/M,UAAU,eAA3C,cAEF,sBAAKA,UAAU,aAAf,UACG+E,EAAK,gBADR,IACyB,cAACjF,EAAA,EAAD,CAAkBS,MAAO0E,EAAS9D,aAAc,EAAGO,mBAAmB,IAD/F,iBAKJ,qBAAK1B,UAAU,sBAAf,SACE,cAAC8E,EAAD,CAASC,KAAMA,EAAMM,QAASA,EAASrE,OAAQA,EAAQiE,QAASA,EAASO,kBAAmBA,GAAmBR,OAAQA,EAAQG,QAASA,EAASD,WAAYA,EAAYK,WAAYA,EAAYH,WAAYA,EAAYE,UAAWA,MAEtO,qBAAKtF,UAAU,oBAAf,SACE,gCACE,sBAAKA,UAAU,0BAAf,UACG+E,EAAK,qBACN,sBAAM/E,UAAU,gBAAhB,SACE,mBAAGgN,IAAI,aAAa5I,OAAO,SAAS6I,KAAK,8BAAzC,yBAHJ,MAKE,sBAAMjN,UAAU,gBAAhB,SACE,mBAAGgN,IAAI,aAAa5I,OAAO,SAAS6I,KAAK,sCAAzC,2BAIJ,qBAAKjN,UAAU,wBAAf,SACG+E,EAAK,uCAQrB,I","file":"static/js/24.37a817f8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport { toNonExponential, countDecimal } from './utils';\r\nimport { bg } from '../lib/web3js';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\nconst LoadLine = styled.span`\r\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\r\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\r\n`\r\nfunction DeriNumberFormat(props) {\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const isValidate = () => {\r\n    const { allowZero } = props\r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN')\r\n      || ((Math.abs(props.value)) === 0 && allowZero === true)\r\n  }\r\n  const renderText = value => value && value.replace(/\\.$/, '')\r\n\r\n  useEffect(() => {\r\n    const { allowZero, wallet, closeShowLoadingEffectAfterLoaded, defaultValue = '--', ...others } = props\r\n\r\n    if (isValidate()) {\r\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\r\n      if (others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0) {\r\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\r\n      }\r\n\r\n      if (others.decimalScale === -1 || ((+others.value) === 0 && allowZero)) {\r\n        delete others.decimalScale\r\n      }\r\n\r\n      //科学计数法\r\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : '' + others.value\r\n      if (others.value && /\\d+.9{6}/.test(others.value)) {\r\n        others.value = (+others.value).toFixed(5)\r\n      }\r\n      setRenderablity(<Wrapper {...others} renderText={renderText}\r\n        displayType='text' fixedDecimalScale={true} thousandSeparator={true} />)\r\n\r\n    } else if (firstTime) {\r\n      const { width, height } = props\r\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\r\n      if (closeShowLoadingEffectAfterLoaded) {\r\n        setFirstTime(false)\r\n      }\r\n    }\r\n    const timeout = window.setTimeout(() => {\r\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\r\n      if (!isValidate()) {\r\n        setRenderablity(defaultValue)\r\n      }\r\n    }, defaultValue === others.value ? 0 : 60000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value, props.decimalScale, props.suffix]);\r\n\r\n  return renderablity;\r\n}\r\nexport default DeriNumberFormat\r\n// export default inject('wallet')(observer(DeriNumberFormat))","import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { bg } from '../../lib/web3js';\r\nimport UnderlineText from '../UnderlineText/UnderlineText';\r\n\r\nconst Wrapper = styled.div`\r\ndisplay : flex;\r\nfont-size : 14px;\r\nalign-items : center;\r\nbackground: rgba(85, 119, 253, 0.1);\r\nborder-radius: 4px;\r\njustify-content: space-between;\r\ninput {\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  // min-width: 240px;\r\n  border: 0;\r\n  width : ${props => props.inputWidth};\r\n  height: ${props => props.inputHeight};\r\n  color : #E0ECFF;\r\n  font-size : 18px;\r\n  padding-left: 16px;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\n.unit {\r\n  margin-right: ${props => props.unitPadding};\r\n}\r\n`\r\nexport default function Input({value,unit,unitTip,max,step,onChange,styles = {},disableNegtive = true ,focus,placeholder='',unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',inputHeight='56px',className,disabled = false,onBlur,onFocus}){\r\n  const inputRef = useRef(null);\r\n  const change = e => {\r\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\r\n    const reg = new RegExp(regStr)\r\n    const { value } = e.target\r\n    if(max && bg(value).gt(max)){    \r\n      onChange && onChange(max)\r\n    } else if(disableNegtive && (value < 0 || isNaN(value))) {\r\n      onChange && onChange('')\r\n    } else if(value){\r\n      if(minTradeVolume >= 1) {\r\n        if(value / minTradeVolume >=1) {\r\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \r\n        } else {\r\n          const validValue = value * minTradeVolume\r\n          onChange && onChange(validValue) \r\n        }\r\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\r\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\r\n        onChange && onChange(filter)\r\n      } else {\r\n        onChange && onChange(value)\r\n      }\r\n    } else {\r\n      onChange && onChange(value)\r\n    }\r\n  }\r\n\r\n  const onKeyPress = evt => {\r\n    if (evt.which !== 46 && evt.which !== 8 && evt.which !== 0 && (evt.which < 48 || evt.which > 57)) {\r\n        evt.preventDefault();\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    inputRef.current.setCustomValidity('')\r\n    if(inputRef.current && focus){\r\n      inputRef.current.focus();\r\n    }\r\n  },[focus])\r\n\r\n\r\n  return (\r\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} inputHeight={inputHeight} className={className} style={{...styles}}>\r\n      <input placeholder={placeholder} type='number' title=\"\" onKeyPress={onKeyPress} onBlur={onBlur} onFocus={onFocus} disabled = {disabled} value={value} step = {isNaN(step) ? 0 : step} ref={inputRef} onChange={change} readOnly={readOnly}/>\r\n      <div className='unit'>{unitTip ? <UnderlineText tip={unitTip} text={unit}/> : unit}</div>\r\n    </Wrapper>    \r\n  )\r\n}","import './spinner.less'\r\nexport default function Spinner() {\r\n  return (\r\n    <div class=\"sleepContentView\">\r\n      <div class=\"circle\">\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/stage-one.7a1f5b00.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.768445a6.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.ee3fc1c4.svg\";","export default __webpack_public_path__ + \"static/media/succeed.02ebda03.svg\";","export default __webpack_public_path__ + \"static/media/faild.e2923f7c.svg\";","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../../components/Button/Button'\r\nimport { PRIMARY } from '../../utils/Constants';\r\nimport useConfig from '../../hooks/useConfig'\r\nimport { useAlert } from 'react-alert'\r\nimport Spinner from './Spinner'\r\nimport BSC from '../../assets/img/bsc-logo.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport stageOne from './img/stage-one.svg'\r\nimport stageTwo from './img/stage-two.svg'\r\nimport stageThree from './img/stage-three.svg'\r\nimport apiProxy from '../../model/ApiProxy';\r\nimport succeed from './img/succeed.svg'\r\nimport FaildLogo from './img/faild.svg'\r\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\r\n  const config = useConfig();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const [isApprove, setIsApprove] = useState(false);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isFaild,setIsFaild] = useState(false)\r\n  const [bridgeState, setBridgeState] = useState({});\r\n  const [claimState, setClaimState] = useState({});\r\n  const [isClickClaim, setIsClickClaim] = useState(false);\r\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\r\n  const connect = () => {\r\n    wallet.connect()\r\n  }\r\n  const valid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        wallet.switchNetwork(config[res.toChainId])\r\n        setIsClaim(true)\r\n\r\n      }\r\n      setIsValid(res.valid)\r\n    }\r\n  }\r\n  const send = async () => {\r\n    if (amount === '' || amount === 0) {\r\n      alert.error(lang['amount-must-be-greater-than-zero'])\r\n      return;\r\n    }\r\n    if (+amount > balance) {\r\n      alert.error(lang['there-is-not-enough-amount'])\r\n      return;\r\n    }\r\n    if (!isWalletConnected.isFromConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setSending(true)\r\n    setIsFaild(false)\r\n    setBridgeState({\r\n      stageOne: false\r\n    })\r\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\r\n    if (res.success) {\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: false\r\n      })\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      setIsFaild(true)\r\n      setSending(false)\r\n    }\r\n  }\r\n  const claim = async () => {\r\n    if (!isWalletConnected.isToConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setIsClickClaim(true)\r\n    setIsFaild(false)\r\n    setClaimState({\r\n      stageOne: false,\r\n    })\r\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: false,\r\n      })\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      setIsClickClaim(false)\r\n      setIsFaild(true)\r\n    }\r\n  }\r\n  const reset = ()=>{\r\n    history.push('/bridge')\r\n  }\r\n  const approve = async () => {\r\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setIsApprove(true);\r\n      loadApprove();\r\n    } else {\r\n      setIsApprove(false)\r\n      alert.error(lang['approve-faild'])\r\n    }\r\n  }\r\n  const loadApprove = async () => {\r\n    if (wallet.isConnected()) {\r\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\r\n      setIsApprove(result.isUnlocked);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (wallet.isConnected()) {\r\n      loadApprove();\r\n      valid()\r\n    }\r\n  }, [wallet.detail, initialize]);\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n    } else if (isClickClaim) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n      setSending(false)\r\n      setAmount('')\r\n    } else {\r\n    }\r\n  }, [isValid, initialize]);\r\n  useEffect(() => {\r\n    let element;\r\n    if (wallet.isConnected()) {\r\n      if (isValid) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\r\n      } else if (!isApprove) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\r\n      } else if(isClickClaim){\r\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\r\n      }else {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\r\n      }\r\n    } else {\r\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\r\n    }\r\n    setActionElement(element)\r\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\r\n  return (\r\n    <div className='operate'>\r\n      <div className='from-to-title'>\r\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\r\n      </div>\r\n      <div className='btn'>\r\n        {actionElement}\r\n      </div>\r\n      <div className='hint'>\r\n        {!isClaim && <div className='sending'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!sending && !isFaild && <div className='staic'></div>}\r\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && <>\r\n                  {bridgeState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['bridge-signed']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\r\n                  {bridgeState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n        {isClaim && <div className='claiming'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!isClickClaim && !isFaild && <div className='staic'></div>}\r\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && <>\r\n                  {claimState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['finished']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && claimState.stageTwo && <>\r\n                  {claimState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}","export default __webpack_public_path__ + \"static/media/arrow-left.3530813d.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.3f7df0de.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\r\nimport Input from '../../components/Input/Input'\r\nimport Operate from './Operate'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport arrow from './img/arrow-left.svg'\r\nimport disabledDown from './img/disabled-down.svg'\r\nimport BSC from '../../assets/img/BNB.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport deriLogo from '../../assets/img/logo.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport down from '../../assets/img/arrow-down.svg'\r\nimport up from '../../assets/img/arrow-up.svg'\r\nimport classNames from 'classnames'\r\nimport './bridge.less'\r\nfunction Bridge({ wallet, lang }) {\r\n  const [amount, setAmount] = useState('');\r\n  const [balance, setBalance] = useState(0);\r\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\r\n  const netWork_text = isdev ?\r\n    [\r\n      {\r\n        text: lang['ropsten'],\r\n        id: 3,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc-testnet'],\r\n        id: 97,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco-testnet'],\r\n        id: 256,\r\n        img: HECO,\r\n      }\r\n    ]\r\n    : [\r\n\r\n      {\r\n        text: lang['ethereum'],\r\n        id: 1,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc'],\r\n        id: 56,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco'],\r\n        id: 128,\r\n        img: HECO,\r\n      }\r\n\r\n    ]\r\n\r\n  const [fromList, setFromList] = useState(netWork_text)\r\n  const [toList, setToList] = useState(netWork_text)\r\n  const [sending, setSending] = useState(false);\r\n  const [initialize, setInitialize] = useState(isdev ?\r\n    {\r\n      from_chainId: 97,\r\n      from_network: lang['bsc-testnet'],\r\n      to_chainId: 3,\r\n      to_network: lang['ropsten']\r\n    } : {\r\n      from_chainId: 1,\r\n      from_network: lang['ethereum'],\r\n      to_chainId: 56,\r\n      to_network: lang['bsc']\r\n    });\r\n  const [isClaim, setIsClaim] = useState(false);\r\n  const [dropdownList_from, setDropdownList_from] = useState(false);\r\n  const [dropdownList_to, setDropdownList_to] = useState(false);\r\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\r\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\r\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\r\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\r\n  const [isWalletConnected, setIsWalletConnected] = useState(\r\n    {\r\n      isFromConnected: false,\r\n      isToConnected: false\r\n    }\r\n  );\r\n  const isConnected = () => {\r\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\r\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\r\n    let obj = {\r\n      isFromConnected: isFromConnected,\r\n      isToConnected: isToConnected\r\n    }\r\n    setIsWalletConnected(obj)\r\n  }\r\n\r\n  const showListFrom = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const showListTo = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_to(!dropdownList_to)\r\n  }\r\n\r\n  const getValid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        setInitialize({\r\n          from_chainId: res.fromChainId,\r\n          from_network: isNetwork(res.fromChainId, lang).netWork,\r\n          to_chainId: res.toChainId,\r\n          to_network: isNetwork(res.toChainId, lang).netWork,\r\n        })\r\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\r\n        setTo_img(isNetwork(res.toChainId, lang).img)\r\n        setAmount(bg(res.amount, -18).toString())\r\n        setSending(res.valid)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getBalance = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\r\n      setBalance(res)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBalance()\r\n  }, [wallet.detail, initialize]);\r\n\r\n  useEffect(() => {\r\n    getValid()\r\n  }, [wallet.detail])\r\n\r\n  const select_from = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.to_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.from_chainId = obj.id;\r\n      Init.from_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const select_to = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.from_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.to_chainId = obj.id;\r\n      Init.to_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_to(!dropdownList_to)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    let from_arr;\r\n    let to_arr;\r\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\r\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\r\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\r\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\r\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\r\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\r\n    from_arr = [from_one, from_two, from_three]\r\n    to_arr = [to_one, to_two, to_three]\r\n    setFromList(from_arr)\r\n    setToList(to_arr)\r\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\r\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\r\n    isConnected()\r\n\r\n  }, [initialize, wallet.detail])\r\n\r\n  const getAmount = (value) => {\r\n    setAmount(value)\r\n  }\r\n\r\n  return (\r\n    <div className='bridge-big-box'>\r\n      <div className='bridge-box'>\r\n        <div className='bridge-title'>\r\n          <div className='title'>\r\n            {lang['bridge']}\r\n          </div>\r\n          <div className='birdge-des'>\r\n            {lang['bridge-des']}\r\n          </div>\r\n        </div>\r\n        <div className='bridge-info'>\r\n          <div className='select-network-box'>\r\n            <div className='select-network-title'>\r\n              {lang['select-networks']}\r\n            </div>\r\n            <div className='select-network-from-to'>\r\n              <div className='from-network'>\r\n                <div className='from-title'>\r\n                  {lang['from']}\r\n                </div>\r\n                <div className='from-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={From_img} alt='' />\r\n                      <span>{initialize.from_network}</span>\r\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\r\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_from ? up : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassFrom}>\r\n                    {fromList.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          {initialize.from_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_from(item)}>\r\n                            <div className='li-logo-network'>\r\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\r\n                            </div>\r\n                          </li> : ''}\r\n                        </>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className='arrow'>\r\n                <img src={arrow} alt='' />\r\n              </div>\r\n              <div className='to-network'>\r\n                <div className='to-title'>\r\n                  {lang['to']}\r\n                </div>\r\n                <div className='to-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={To_img} alt='' />\r\n                      <span>{initialize.to_network}</span>\r\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\r\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_to ? up : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassTo}>\r\n                    {toList.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          {initialize.to_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_to(item)}>\r\n                            <div className='li-logo-network'>\r\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\r\n                            </div>\r\n                          </li> : ''}\r\n                        </>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='set-amount'>\r\n            <div className='set-amount-title'>\r\n              {lang['set-amount']}\r\n            </div>\r\n            <div className='set-amount-box'>\r\n              <div className='input-deri'>\r\n                <Input placeholder='0' value={amount} onChange={getAmount} decimal={18} disabled={sending} className='input-box' />\r\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\r\n              </div>\r\n              <div className='total-deri'>\r\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true} /> DERI\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='bridge-operate-hint'>\r\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\r\n          </div>\r\n          <div className='bridge-to-polygon'>\r\n            <div>\r\n              <div className='birdge-to-polygon-title'>\r\n                {lang['bridge-to-polygon']}\r\n                <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://bridge.arbitrum.io/'> Arbitrum</a>\r\n                </span> or\r\n                <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'> Polygon</a>\r\n                </span>\r\n\r\n              </div>\r\n              <div className='bridge-to-polygon-des'>\r\n                {lang['bridge-to-polygon-des']}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}\r\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}