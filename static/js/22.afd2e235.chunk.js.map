{"version":3,"sources":["components/Tab/Tab.js","components/Search/Search.js","hooks/useContractLp.ts","pages/Pool/img/deri.svg","pages/Pool/img/no-nft.svg","pages/Pool/LpDetail.js","hooks/useContractCall.ts"],"names":["Wrapper","styled","div","props","width","height","borderR","borderL","size","iconMarginRight","inactiveBgColor","borderB","activeFontColor","activeBgColor","borderT","Tab","tabSet","className","icon","borderTop","borderBottom","divider","activeIndex","arr","Object","keys","useState","selected","setSelected","styles","setStyles","setBorderT","setBorderL","setBorderB","setBorderR","setActiveFontColor","useEffect","checked","style","borderColor","fontColor","map","item","index","direction","onClick","e","select","iconWidth","iconHeight","token","inicon","content","bgColor","Search","list","onChange","searchName","placeholder","onFocus","onBlur","search","setSearch","setLength","origin","useRef","value","toLocaleUpperCase","current","length","filter","el","toUpperCase","indexOf","type","target","searchChange","src","searchLogo","alt","contractdescribers","r","useContract","name","chainId","contractAddress","wallet","useWallet","address","abi","getContract","ethereum","useMemo","provider","getProvider","networkVersion","String","Web3Provider","Contract","account","getSigner","connectUnchecked","getProviderOrSigner","pollingInterval","require","forEach","key","path","split","last","substring","env","DeriEnv","get","chainInfo","config","chainConfig","PairAddress","Operate","lang","getLang","afterTransaction","tokenIdList","alert","setActiveIndex","NFTContract","PoolContract","disabled","setDisabled","isApproveList","setIsApproveList","isApproved","setIsApproved","approveBtnText","setApproveBtnText","NFTcontractCall","contract","async","method","params","options","colors","isApprove","useCallback","approve","getApproved","console","log","obj","toLocaleLowerCase","id","push","transactionTitle","text","transactionContent","success","error","gasLimit","getGasLimit","res","hash","Emitter","emit","EVENT_TRANS_BEGIN","title","receipt","wait","transactionHash","status","EVENT_TRANS_END","context","clickApprove","find","addLiquidity","connect","baseToken","removeLiquidity","backgroundColor","noNFT","Button","fontSize","label","PRIMARY","inject","observer","poolManager","useParams","isShowInfo","setIsShowInfo","useAlert","nowToken","poolConfig","setPoolConfig","bTokenList","setBTokenList","liquidity","setLiquidity","poolDeri","setPoolDeri","useConfig","claimPending","setClaimPending","unStakedTokenIdList","setUnStakedTokenIdList","stakedTokenIdList","setStakedTokenIdList","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","totalYearDeri","setTotalYearDeri","accountEthTokenValue","setAccountEthTokenValue","accountDeriToken","setAccountDeriToken","apy","setApy","networkText","DeriforPairContract","EthforPairContract","BTokenContract","PairContract","unTokenIdListRef","tokenIdListRef","getPendingReward","detail","deriNumber","BigNumber","from","_hex","toString","bTime","setTimeout","data","getSecondsPerLiquidityInsideX128","timestamp","secondsPerLiquidityInsideX128","Promise","all","aTime","getBTokenValue","positions","tickLower","tickUpper","tickCurrent","slot0","tick","amount","total_amount0","total_amount1","getAmountETHAndDeri","deri","eth","deriSum","reduce","accumulator","currentValue","ethSum","ethPrice","axios","ethValue","bg","times","toNumber","getApy","deriPath","process","REACT_APP_INFO_HTTP_URL","resp","fetch","deriPrice","json","price","sumValue","totalYearDeriValue","getTimeRewardInfo","rewards","secondsPerLiquidityInsideX128_a","reward","getRewardInBetween","Math","abs","oneYear","valuePerYear","getunStakedTokenIdList","getStakedTokenIdList","getLiquidity","background","NFTNumber","balanceOf","tokenId","tokenOfOwnerByIndex","deriTokenId","getPositionInfo","getUserTokenIds","DeriNumber","EthNumber","deriAmount","ethAmount","deriValue","switchNetwork","isConnected","interval","window","setInterval","clearInterval","loadDoubleMingingPool","pool","lpPools","p","symbols","symbol","join","bTokens","load","history","back","backIcon","ARBITRUM","zone","rel","href","Icon","bTokenSymbol","DeriNumberFormat","suffix","decimalScale","claim","Spinner","firstTime","downIcon","displayType","thousandSeparator","formatAddress"],"mappings":"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","file":"static/js/22.afd2e235.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport React, { useState, useEffect } from 'react';\nimport Icon from '../Icon/Icon';\nconst Wrapper = styled.div`\n    cursor: pointer;\n    width:${props => props.width}px;\n    height:${props => props.height}px;\n    display:flex;\n    .tab-left.inactive{\n      border-radius:0px 0px 4px 0px;\n    }\n    .tab-right.inactive{\n      border-radius:0px 0px 0px 4px;\n    }\n    .tab-left.active{\n      border-radius:0px 4px 0px 0px;\n      ${props => props.borderR};\n    }\n    .tab-right.active{\n      border-radius:4px 0px 0px 0px;\n      ${props => props.borderL};\n    }\n    .inactive,.active{\n      width:50%;\n      box-sizing: content-box;\n      font-size:${props => props.size}px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      img{\n        margin-right:${props=>props.iconMarginRight}px\n      }\n    }\n    .inactive{\n      background:${props => props.inactiveBgColor};\n      ${props => props.borderB}\n    }\n    .active {\n      color: ${props => props.activeFontColor};\n      background : ${props => props.activeBgColor};\n      ${props => props.borderT};\n    }\n    .icon-tab{\n      margin-right:20px;\n      width:25px;\n      height:25px;\n    }\n  `\nexport default function Tab({ tabSet, inactiveBgColor, iconMarginRight, activeBgColor, icon, className, width = 238, height = 47, size = 16, borderTop = false, borderBottom = false, divider = false,activeIndex = 0 }) {\n  let arr = Object.keys(tabSet)\n  const [selected, setSelected] = useState(arr[activeIndex])\n  const [styles, setStyles] = useState()\n  const [borderT, setBorderT] = useState()\n  const [borderL, setBorderL] = useState()\n  const [borderB, setBorderB] = useState()\n  const [borderR, setBorderR] = useState()\n  const [activeFontColor, setActiveFontColor] = useState()\n  function select(item,e) {\n    // e.stopPropagation()\n    setSelected(item)\n  }\n  useEffect(() => {\n    const arr = Object.keys(tabSet)\n    setSelected(arr[activeIndex])\n  }, [tabSet,activeIndex])\n\n\n  useEffect(() => {\n    const arr = Object.keys(tabSet)\n    let checked = selected ? selected : arr[activeIndex]\n    if (tabSet[checked]) {\n      setStyles(tabSet[checked].style)\n      let borderT = borderTop ? `border-top:1px solid ${tabSet[checked].borderColor}` : \"border-top:0\"\n      let borderB = borderBottom ? `border-bottom:1px solid ${tabSet[checked].borderColor}` : \"border-bottom:0\"\n      let borderL = divider ? `border-left:1px solid ${tabSet[checked].borderColor}` : \"border-left:0\"\n      let borderR = divider ? `border-right:1px solid ${tabSet[checked].borderColor}` : \"border-right:0\"\n      let activeFontColor = tabSet[checked].fontColor ? tabSet[checked].fontColor : '#FFFFFF'\n      setBorderT(borderT)\n      setBorderL(borderL)\n      setBorderB(borderB)\n      setBorderR(borderR)\n      setActiveFontColor(activeFontColor)\n    }\n\n  }, [tabSet, selected])\n\n  return (\n    <div style={styles} className={className}>\n      <Wrapper className='tab-header' iconMarginRight={iconMarginRight} width={width} height={height}\n        activeFontColor={activeFontColor} activeBgColor={activeBgColor} inactiveBgColor={inactiveBgColor} size={size} borderT={borderT} borderB={borderB} borderL={borderL} borderR={borderR}>\n        {arr.map((item,index) => (\n          <div\n            key={index}\n            className={item === selected ? `${tabSet[item].direction || tabSet[item].className} active` : `${tabSet[item].direction || tabSet[item].className} inactive`}\n            onClick={(e) => select(item,e)}>\n            {tabSet[item].icon ? <Icon width={tabSet[item].iconWidth} height={tabSet[item].iconHeight} token={item === selected ? tabSet[item].icon : tabSet[item].inicon}/> : \"\"}  {item}\n          </div>\n        ))}\n      </Wrapper>\n      {tabSet[selected] ? tabSet[selected].content : ''}\n    </div>\n  )\n}","import React, { useEffect, useState, useRef } from 'react';\nimport styled from \"styled-components\"\nimport searchLogo from '../../assets/img/search.svg'\nconst Wrapper = styled.div`\n  .search-token{\n  width: ${props => props.width }px;\n  height: ${props => props.height}px;\n  background: ${props => props.bgColor};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding:0 24px;\n  border-radius:4px;\n  img{\n    width:18px;\n    height:18px;\n  }\n  .search-input{\n    border: 0;\n    width:100%;\n    height: 100%;\n    background:transparent;\n    outline-style: none;\n    color: #FFFFFF;\n    font-size: 18px;\n    border-radius: 4px;\n  }\n}\n`\n\nexport default function Search({ list, onChange,width='320',height='48', bgColor='rgba(85, 119, 253, 0.1)', searchName = 'bTokenSymbol',className ,placeholder = 'Search',onFocus,onBlur}) {\n  const [search, setSearch] = useState('')\n  const [length,setLength] = useState(0)\n  const origin = useRef([])\n  const searchChange = (e) => {\n    let value = e.target.value\n    setSearch(value)\n  }\n\n  useEffect(() => {\n    if (search) {\n      let value = search.toLocaleUpperCase()\n      if (origin.current.length === 0) {\n        origin.current = list\n        setLength(list.length)\n      }\n      const arr = origin.current.filter(el => el[searchName] && el[searchName].toUpperCase().indexOf(value) >= 0)\n      onChange(arr,value)\n    } else {\n      onChange(origin.current)\n    }\n  }, [search])\n  useEffect(()=>{\n    if (origin.current.length === 0) {\n      setLength(list.length)\n    }\n  },[list])\n  return (\n    <Wrapper width={width} height={height} bgColor={bgColor} className={className}  >\n      <div className='search-token'>\n        <input\n          type='text'\n          className='search-input'\n          placeholder={placeholder}\n          value={search}\n          onChange={(e) => { searchChange(e) }}\n          // onFocus={e => onFocus && onFocus(e)}\n          // onBlur={e => onBlur && onBlur(e)}\n        />\n        <img src={searchLogo} alt='' />\n      </div>\n    </Wrapper>\n\n  )\n}","import { Contract, ContractInterface } from \"@ethersproject/contracts\";\nimport {\n  JsonRpcProvider,\n  JsonRpcSigner,\n  Web3Provider,\n} from \"@ethersproject/providers\";\nimport { useMemo } from \"react\";\nimport { useWallet } from \"use-wallet\";\nimport { getProvider } from \"../utils/utils\";\n\nconst contractdescribers = {};\n\nfunction importAll(r) {\n  return r.keys().forEach((key) => {\n    const path = key.split(\"/\");\n    const last = path[path.length - 1];\n    contractdescribers[last.substring(0, last.indexOf(\".\"))] = r(key);\n  });\n}\n\nimportAll(require.context(`../abis/`, true, /\\.json$/));\n\nexport default function useContract(\n  name: string,\n  chainId: number,\n  contractAddress: string,\n): Contract {\n  const wallet = useWallet();\n  const { address, abi } = getContract(name);\n  const { ethereum } = wallet;\n  if (address) {\n    contractAddress = address;\n  }\n  return useMemo(() => {\n    let provider = getProvider(chainId);\n    if (ethereum && ethereum.networkVersion === String(chainId)) {\n      provider = new Web3Provider(ethereum, \"any\");\n    }\n    if (!provider) {\n      return null;\n    }\n    return new Contract(\n      contractAddress,\n      abi,\n      getProviderOrSigner(provider, wallet.account),\n      {pollingInterval: 500}\n    );\n  }, [contractAddress, abi, wallet]);\n}\n\n// account is not optional\nfunction getSigner(provider: JsonRpcProvider, account: string): JsonRpcSigner {\n  return provider.getSigner(account).connectUnchecked();\n}\n\n// account is optional\nfunction getProviderOrSigner(\n  provider: JsonRpcProvider,\n  account?: string\n): JsonRpcProvider | JsonRpcSigner {\n  return account ? getSigner(provider, account) : provider;\n}\n\nfunction getContract(name: string): ContractDescriber {\n  return contractdescribers[name];\n}\n\ninterface ContractDescriber {\n  address: string;\n  abi: ContractInterface;\n}\n","export default __webpack_public_path__ + \"static/media/deri.520d2449.svg\";","export default __webpack_public_path__ + \"static/media/no-nft.47097e0e.svg\";","/* eslint-disable react/jsx-no-target-blank */\nimport { useState, useEffect, useMemo, useRef, useCallback } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { inject, observer } from 'mobx-react'\nimport { useAlert } from 'react-alert'\nimport Tab from '../../components/Tab/Tab'\nimport { bg, formatAddress, getAmountETHAndDeri, getGasLimit, getProvider } from \"../../utils/utils\"\nimport config from '../../config.json'\nimport downIcon from '../../assets/img/arrow-down.svg'\nimport useConfig from '../../hooks/useConfig'\nimport { DeriEnv } from '../../lib/web3js/index'\nimport './detail.less'\nimport './claim.less'\nimport backIcon from '../../assets/img/back.svg'\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\nimport deri from './img/deri.svg'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport noNFT from './img/no-nft.svg'\nimport Spinner from '../../components/Spinner/Spinner'\nimport Icon from '../../components/Icon/Icon'\nimport Search from '../../components/Search/Search'\nimport Button from '../../components/Button/Button'\nimport { EVENT_TRANS_BEGIN, EVENT_TRANS_END, PRIMARY } from '../../utils/Constants'\nimport useContract from '../../hooks/useContractLp'\nimport { BigNumber } from 'ethers'\nimport './Detail/operateLiquidity.less'\nimport useContractCall from '../../hooks/useContractCall'\nimport Emitter from '../../utils/Emitter'\nimport axios from 'axios'\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\nconst chainConfig = config[DeriEnv.get()]['chainInfo']\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\nfunction LpDetail({ lang, wallet = {}, poolManager, getLang }) {\n  const { chainId, address } = useParams();\n  const [isShowInfo, setIsShowInfo] = useState('show')\n  const alert = useAlert();\n  const nowToken = \"UNISWAP-LP\"\n  const [poolConfig, setPoolConfig] = useState('')\n  const [bTokenList, setBTokenList] = useState([])\n  const [liquidity, setLiquidity] = useState(\"\")\n  const [poolDeri, setPoolDeri] = useState(0)\n  const config = useConfig();\n  const [claimPending, setClaimPending] = useState(false)\n  const [unStakedTokenIdList, setUnStakedTokenIdList] = useState([])\n  const [stakedTokenIdList, setStakedTokenIdList] = useState([])\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\n  const [totalYearDeri, setTotalYearDeri] = useState(0)\n  const [accountEthTokenValue, setAccountEthTokenValue] = useState(0)\n  const [accountDeriToken, setAccountDeriToken] = useState(0)\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [apy, setApy] = useState()\n  const networkText = chainInfo[chainId] && chainInfo[chainId].name;\n\n  const DeriforPairContract = useContract(\"ERC20\", chainId, DeriAddress)\n  const EthforPairContract = useContract(\"ERC20\", chainId, ETHAddress)\n  const NFTContract = useContract(\"IERC721\", chainId)\n  const PoolContract = useContract(\"arbitrumLp\", chainId)\n  const BTokenContract = useContract(\"LpTokenId\", chainId)\n  const PairContract = useContract(\"PairAbi\", chainId)\n\n  const unTokenIdListRef = useRef()\n  const tokenIdListRef = useRef()\n\n  const getPendingReward = async () => {\n    let res = await PoolContract[\"getRewardInfo(address)\"](wallet.detail.account)\n    if (res) {\n      let deriNumber = BigNumber.from(res._hex).toString() / (10 ** 18)\n      setPoolDeri(deriNumber)\n    }\n  }\n\n  const bTime = useCallback(async (id) => {\n    let res;\n    await setTimeout(async () => {\n      let provider = getProvider(chainId);\n      let contract = await PoolContract.connect(provider)\n      let data = stakedTokenIdList.map(async (item) => {\n        let obj = {}\n        let res = await contract.getSecondsPerLiquidityInsideX128(item)\n        if (res) {\n          obj[\"id\"] = item\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n        }\n        return obj\n      })\n      data = await Promise.all(data)\n      setBTimeRewardInfo(data)\n    }, 1000);\n    return res\n  }, [stakedTokenIdList, PoolContract])\n\n  const aTime = useCallback(async () => {\n    let data = stakedTokenIdList.map(async (item) => {\n      let obj = {}\n      let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\n      if (res) {\n        obj[\"id\"] = item\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n      }\n      return obj\n    })\n    data = await Promise.all(data)\n    bTime()\n    setATimeRewardInfo(data)\n  }, [stakedTokenIdList, PoolContract])\n\n  const getBTokenValue = useCallback(async () => {\n    let data = stakedTokenIdList.map(async (item) => {\n      let obj = {}\n      let res = await BTokenContract.positions(item)\n      obj = {\n        tickLower: res.tickLower,\n        tickUpper: res.tickUpper,\n        liquidity: BigNumber.from(res.liquidity._hex).toString()\n      }\n      return obj\n    })\n    data = await Promise.all(data)\n    let tickCurrent = await PairContract.slot0()\n    tickCurrent = tickCurrent.tick\n    let amount = data.map((item) => {\n      let [total_amount0, total_amount1] = getAmountETHAndDeri(tickCurrent, item.tickLower, item.tickUpper, item.liquidity)\n      return {\n        deri: total_amount0 / 10 ** 18,\n        eth: total_amount1 / 10 ** 18\n      }\n    })\n    let deriSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.deri;\n    }, 0)\n    let ethSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.eth;\n    }, 0)\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let ethValue = bg(ethSum).times(ethPrice).toNumber();\n    setAccountEthTokenValue(ethValue)\n    setAccountDeriToken(deriSum)\n  }, [BTokenContract, stakedTokenIdList, PairContract])\n\n  const getApy = useCallback(async () => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n      let resp = await fetch(deriPath);\n      let res = await resp.json();\n      let deriPrice = res.data.price;\n      let deriValue = bg(accountDeriToken).times(deriPrice).toNumber();\n      let sumValue = deriValue + accountEthTokenValue\n      let totalYearDeriValue = bg(totalYearDeri).times(deriPrice).toNumber();\n      let apy = (totalYearDeriValue / sumValue) * 100\n      setApy(apy)\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  const getTimeRewardInfo = useCallback(async () => {\n    console.log(\"bTimeRewardInfo aTimeRewardInfo\", bTimeRewardInfo, aTimeRewardInfo)\n    let rewards = bTimeRewardInfo.map(async (item) => {\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\n      if (reward) {\n        let obj = {\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\n          id: item.id,\n          timestamp: Math.abs(item.timestamp - aTime.timestamp)\n        }\n        return obj\n      }\n    })\n    rewards = await Promise.all(rewards)\n    if (rewards[0].timestamp !== 0) {\n      const totalScore = rewards.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.reward;\n      }, 0);\n      const oneYear = 1000 * 60 * 60 * 24 * 365;\n      const valuePerYear = (totalScore / (rewards[0].timestamp * 1000)) * oneYear;\n      setTotalYearDeri(valuePerYear)\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n  const afterTransaction = (activeIndex) => {\n    getPendingReward()\n    getunStakedTokenIdList()\n    getStakedTokenIdList()\n    getLiquidity()\n    setActiveIndex(activeIndex)\n  }\n  const tabSet = useMemo(() => ({\n    [lang['add']]: {\n      content: <Operate type='add' getLang={getLang} setActiveIndex={setActiveIndex} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} NFTContract={NFTContract} PoolContract={PoolContract} tokenIdList={unStakedTokenIdList} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      icon: 'add-icon',\n      iconWidth: '25',\n      iconHeight: '25',\n      inicon: 'inactive-add',\n      direction: \"tab-left\"\n    },\n    [lang['remove']]: {\n      content: <Operate type='remove' getLang={getLang} setActiveIndex={setActiveIndex} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} PoolContract={PoolContract} NFTContract={NFTContract} tokenIdList={stakedTokenIdList} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      icon: 'remove-icon',\n      iconWidth: '25',\n      iconHeight: '25',\n      iconMarginRight: '20',\n      inicon: 'inactive-remove',\n      direction: \"tab-right\",\n    },\n  }), [lang, wallet, getLang, afterTransaction,setActiveIndex, unStakedTokenIdList, alert, stakedTokenIdList, NFTContract, PoolContract, address])\n\n  const load = async () => {\n    await poolManager.loadDoubleMingingPool();\n    let pool = poolManager.lpPools\n    pool = pool.filter(p => p.address === address)\n    pool = pool[0]\n    let symbols = pool.symbols.map(item => {\n      let arr = [];\n      arr.push(item.symbol)\n      return arr\n    })\n    symbols = symbols.join(',')\n    setPoolConfig(pool)\n    setBTokenList(pool.bTokens)\n  }\n  const claimDeri = async () => {\n    if (+poolDeri === 0) {\n      alert.error(lang['no-deri-to-claim-yet']);\n      return;\n    }\n    setClaimPending(true)\n    const title = {\n      text: \"Claim Deri\",\n      icon: \"DERI\",\n    }\n    const content = {\n      success: lang['claim-deri-reward'],\n      error: lang['transaction-failed'],\n    }\n    try {\n      let params = [address]\n      let gasLimit = await getGasLimit(PoolContract, \"claim\", params)\n      let res = await PoolContract.claim({ gasLimit: gasLimit });\n      console.log(\"claim\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: content, hash: res.hash\n        })\n      } else {\n        getPendingReward()\n        setClaimPending(false)\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: true, hash: hash, error: \"error\" } })\n            if (res.success) {\n              setPoolDeri(0)\n            }\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: false.success, hash: hash, error: \"error\" } })\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n    getPendingReward()\n    setClaimPending(false)\n  }\n\n  const getunStakedTokenIdList = useCallback(async () => {\n    if (wallet.detail.account) {\n      let NFTNumber = await NFTContract.balanceOf(wallet.detail.account)\n      NFTNumber = BigNumber.from(NFTNumber._hex).toString()\n      let tokenId = []\n      for (let index = 0; index < NFTNumber; index++) {\n        let id = await NFTContract.tokenOfOwnerByIndex(wallet.detail.account, index)\n        id = BigNumber.from(id._hex).toString()\n        tokenId.push(id)\n      }\n      let deriTokenId = [];\n      for (let index = 0; index < tokenId.length; index++) {\n        let id = await PoolContract.getPositionInfo(tokenId[index])\n        if (id[0].toLocaleLowerCase() === PairAddress.toLocaleLowerCase()) {\n          deriTokenId.push(tokenId[index])\n        }\n      }\n      setUnStakedTokenIdList(deriTokenId)\n    }\n  }, [NFTContract, wallet.detail.account, PoolContract])\n\n  const getStakedTokenIdList = useCallback(async () => {\n    if (wallet.detail.account) {\n      let res = await PoolContract.getUserTokenIds(wallet.detail.account)\n      res = res.map(item => {\n        return BigNumber.from(item._hex).toString()\n      })\n      console.log(\"getStakedTokenIdList\", res)\n      setStakedTokenIdList(res)\n    }\n  }, [PoolContract, wallet.detail.account])\n\n  const getLiquidity = useCallback(async () => {\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let resp = await fetch(deriPath);\n    let res = await resp.json();\n    let deriPrice = res.data.price;\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\n    let liquidity = deriValue + ethValue\n    setLiquidity(liquidity)\n  }, [DeriforPairContract, EthforPairContract])\n\n  useEffect(() => {\n    if (wallet.detail.chainId && wallet.detail.chainId !== chainId) {\n      wallet.switchNetwork(config[chainId])\n    }\n    if (wallet.isConnected() && PoolContract) {\n      let interval = window.setInterval(getPendingReward, 1000 * 10 * 3);\n      getPendingReward()\n      return () => clearInterval(interval);\n    }\n  }, [wallet.detail.chainId, wallet.detail.account, PoolContract])\n\n\n  useEffect(() => {\n    if (stakedTokenIdList.length && PoolContract) {\n      aTime()\n    }\n  }, [stakedTokenIdList, PoolContract, wallet])\n\n  useEffect(() => {\n    if (stakedTokenIdList.length && BTokenContract && PairContract) {\n      getBTokenValue()\n    }\n  }, [BTokenContract, stakedTokenIdList, PairContract, wallet])\n\n  useEffect(() => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      getApy()\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  useEffect(() => {\n    if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\n      getTimeRewardInfo()\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n\n  useEffect(() => {\n    load()\n  }, [])\n\n  useEffect(() => {\n    if (!wallet.isConnected() && liquidity && !stakedTokenIdList) {\n      setApy(12.43)\n    }\n  }, [liquidity, wallet && stakedTokenIdList])\n\n  useEffect(() => {\n    if (PoolContract && !tokenIdListRef.current && wallet.detail.account) {\n      getStakedTokenIdList()\n      tokenIdListRef.current = true\n    }\n  }, [PoolContract, wallet.detail.account])\n\n  useEffect(() => {\n    if (NFTContract && wallet.detail.account && PoolContract && !unTokenIdListRef.current) {\n      getunStakedTokenIdList()\n      tokenIdListRef.current = true\n    }\n  }, [NFTContract, wallet.detail.account, PoolContract])\n\n  useEffect(() => {\n    if (DeriforPairContract && EthforPairContract) {\n      getLiquidity()\n    }\n  }, [DeriforPairContract, EthforPairContract])\n\n\n  return (\n    <div className='pool-detail'>\n      <div className='back-pool'>\n        <div className='icon-back' onClick={() => { window.history.back(-1) }}>\n          <img alt='' src={backIcon} />\n          <span>{lang['back']}</span>\n        </div>\n      </div>\n      <div className='pool-deatail-info'>\n        <div className='pool-detail-basetoken-info'>\n          <div className='pool-info-text'>\n            <div className='pool-network-type'>\n              <div className='network-logo'>\n                <img alt='' src={ARBITRUM} />\n              </div>\n              <div className='pool-type-network-text'>\n                <div className='pool-type-text'>\n                  {lang[poolConfig.type]} {lang[poolConfig.zone]}\n                </div>\n                <div className='pool-network-text'>\n                  {networkText}\n                </div>\n              </div>\n            </div>\n            <div className='pool-des'>\n              Stake Uniswap <a rel='norelerror' target='_blank' href=\"https://app.uniswap.org/#/add/ETH/0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12/3000\" >DERI-ETH </a> LP NFTs to earn $DERI rewards.\n              <br></br>\n              <a rel='norelerror' target='_blank' href='https://docs.deri.io/library/faqs/mining-faq#is-dex-liquidity-mining-on-sushiswap-sushiswap-onsen-and-pancakeswap-deri-risk-free'><span className='learn-more'> {lang['learn-more']}</span></a>\n            </div>\n          </div>\n          <div className='select-basetoken-info'>\n            <div className='select-coin-title-search'>\n              <div className='select-coin-title'> {lang['select-the-coin']}</div>\n              <div className='search-box'>\n                <Search list={bTokenList} searchName='bTokenSymbol' onChange={() => { }} />\n              </div>\n            </div>\n            <div className='coin-search'>\n              <div className='slide-icon left'>\n                <Icon token='arrow-left' width='24' height='24' />\n              </div>\n              <div className=\"coin-list\">\n                {bTokenList.length ? <>\n                  <div className='coin-box checked-base'>\n                    <div className='base-apy-info'>\n                      <div className='lp-btoken-logo'>\n                        <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                        <span className='conect-logo'>+</span>\n                        <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                      </div>\n                      <div className='apy-base-staked'>\n                        <div className='base-name'>{nowToken}</div>\n                        <div className='base-apy'>\n                          {lang['apy']} &nbsp; <DeriNumberFormat value={apy} suffix='%' decimalScale={2} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </> : null}\n              </div>\n              <div className='slide-icon right'>\n                <Icon token='arrow-right' width='24' height='24' />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='pool-detail-add-remove-info'>\n          <div className='mining-deri-liquidity'>\n            <div className='btoken-liquidity'>\n              {bTokenList.length && <>\n                <div className='lp-btoken-logo'>\n                  <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                  <span className='conect-logo'>+</span>\n                  <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                </div>\n                <div className='manage-stake'>\n                  <div className='manage'>\n                    {lang['manage']} {nowToken} {lang['liquidity']}\n                  </div>\n                </div>\n              </>}\n            </div>\n            <div className='deri-current-epoch'>\n              <div className={'mining-pool-claim'}>\n                <div className='mining-claim-info'>\n                  <span> {lang['you-have']}</span>\n                  <span className={`${+poolDeri === 0 ? 'no-deri' : \"\"} mining-pool-num`} onClick={claimDeri}>\n                    {claimPending && <Spinner />}\n                    <DeriNumberFormat firstTime={false} value={poolDeri} decimalScale={2} />\n                    <img src={deri} alt=\"deri\" />\n                  </span>\n                  <span>{lang['claim-in-pool']}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='mining-add-remove-liquidity'>\n            <div className='pool-info'>\n              <div className='pool-info-title'>\n                <div className='pool-info-title-text'>\n                  {lang['pool-info']}\n                </div>\n                <div className='down-up'>\n                  {isShowInfo === 'show' && <span onClick={() => setIsShowInfo('hide')}>\n                    <img className='up-icon' alt='' src={downIcon} />\n                  </span>}\n                  {isShowInfo === 'hide' && <span onClick={() => setIsShowInfo('show')}>\n                    <img alt='' src={downIcon} />\n                  </span>}\n                </div>\n              </div>\n              <div className={`'pool-info-text' ${isShowInfo}`}>\n                <div className='pool-info-text-one'>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['apy']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat value={apy} suffix='%' decimalScale={2} />\n                    </div>\n                  </div>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['pool-liquidity']}</div>\n                    <div className='info-box-num'>\n                      $ <DeriNumberFormat value={liquidity} displayType='text' decimalScale={0} thousandSeparator={true} />\n                    </div>\n                  </div>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['staked-balance']}</div>\n                    <div className='info-box-num'>\n                      {stakedTokenIdList.length}{\" \"}\n                      <a href='https://arbiscan.io/address/0xC36442b4a4522E871399CD717aBDD847Ab11FE88'>DERI/ETH LP NFTs</a>\n                    </div>\n                  </div>\n                </div>\n                <div className='pool-info-text-two'>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['contract-address']}</div>\n                    <div className='info-box-num'>\n                      <a target='_blank' rel='noreferrer' href={`${chainConfig[chainId] && chainConfig[chainId]['viewUrl']}/address/${address}`}>\n                        {formatAddress(address)}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='add-remove-liquidity'>\n              <Tab tabSet={tabSet} iconMarginRight='20' width={379} size={18} inactiveBgColor='#0c192d' icon='' borderBottom={true} divider={true} activeIndex={activeIndex} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst Operate = ({ wallet, type, lang, getLang, afterTransaction, tokenIdList, alert,setActiveIndex, NFTContract, PoolContract, address }) => {\n  const [disabled, setDisabled] = useState(false)\n  const [isApproveList, setIsApproveList] = useState([])\n  const [isApproved, setIsApproved] = useState(false)\n  const [approveBtnText, setApproveBtnText] = useState(lang[\"approve\"])\n  const NFTcontractCall = useContractCall(NFTContract);\n  // const PoolcontractCall = useContractCall(PoolContract);\n  const colors = ['#824A4A', '#69985E', '#93A1B8', '#377DFF', '#59AE99'];\n  const isApprove = useCallback(async () => {\n    let list = []\n    for (let index = 0; index < tokenIdList.length; index++) {\n      let approve = await NFTContract.getApproved(tokenIdList[index])\n      console.log(\"getApproved\", approve)\n      let obj = {}\n      if (approve && approve.toLocaleLowerCase() === address.toLocaleLowerCase()) {\n        obj = {\n          id: tokenIdList[index],\n          isApproved: true\n        }\n      } else {\n        obj = {\n          id: tokenIdList[index],\n          isApproved: false\n        }\n      }\n      list.push(obj)\n    }\n    console.log(list)\n    setIsApproveList(list)\n  }, [tokenIdList, NFTContract])\n\n  const approve = useCallback(async (id) => {\n    const transactionTitle = {\n      text: \"Approve\",\n      icon: \"DERI\"\n    }\n    const transactionContent = {\n      success: `Approve ${id}`,\n      error: \"Transaction failed\",\n    }\n    id = +id\n    try {\n      let params = [address, id]\n      let gasLimit = await getGasLimit(NFTContract, \"approve\", params)\n      console.log(gasLimit)\n      let res = await NFTcontractCall(\"approve\", params, { gasLimit: gasLimit });\n      // let transactionResponse = await NFTContract.approve(address, id)\n      console.log(\"approve\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: transactionTitle, content: transactionContent, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  }, [NFTContract])\n\n  const clickApprove = useCallback(async () => {\n    let id = isApproveList.find(item => !item.isApproved)\n    if (id) {\n      let approved = await approve(id.id)\n      isApprove()\n    }\n  }, [isApproveList])\n\n  const addLiquidity = useCallback(async () => {\n    const title = {\n      text: lang[\"add-liquidity-state\"],\n      icon: \"DERI\"\n    }\n    const connect = {\n      success: `${getLang('add-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\n      error: lang['transaction-failed'],\n    }\n    try {\n      let gasLimit = await getGasLimit(PoolContract, \"deposit\", [])\n      let res = await PoolContract[\"deposit()\"]({ gasLimit: gasLimit });\n      console.log(\"deposit\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: connect, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          let index = type === \"add\" ? 0 : 1\n          afterTransaction && afterTransaction(index)\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n\n  }, [PoolContract, type])\n  const removeLiquidity = useCallback(async () => {\n    const title = {\n      text: lang[\"remove-liquidity-state\"],\n      icon: \"DERI\"\n    }\n    const connect = {\n      success: `${getLang('remove-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\n      error: lang['transaction-failed'],\n    }\n    try {\n      let gasLimit = await getGasLimit(PoolContract, \"withdraw\", [])\n      let res = await PoolContract[\"withdraw()\"]({ gasLimit: gasLimit });\n      console.log(\"withdraw\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: connect, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        let index = type === \"add\" ? 0 : 1\n        afterTransaction && afterTransaction(index)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n\n  }, [PoolContract, type])\n\n  useEffect(() => {\n    if (isApproveList.length) {\n      let id = isApproveList.find(item => !item.isApproved)\n      if (id) {\n        let text = `${lang[\"approve\"]} ${id.id}`\n        setApproveBtnText(text)\n      } else {\n        setIsApproved(true)\n      }\n    }\n  }, [isApproveList])\n\n  useEffect(() => {\n    if (NFTContract && tokenIdList && tokenIdList.length && type === 'add') {\n      isApprove()\n    }\n  }, [tokenIdList, NFTContract, type])\n\n  useEffect(() => {\n    setDisabled(!tokenIdList.length)\n    setIsApproved(!tokenIdList.length)\n    if (type === \"remove\") {\n      setIsApproved(true)\n      setActiveIndex(1)\n    }else{\n      setActiveIndex(0)\n    }\n  }, [tokenIdList, type])\n  return (\n    <div className='operate-liquidity-lp operate-liquidity'>\n      {\n        (tokenIdList && tokenIdList.length) ?\n          <div className='add-remove-nft-box'>\n            <div className='unstaked-nft'>\n              Your {type === \"add\" ? \"unstaked\" : \"staked\"} DERI/ETH LP NFTs\n            </div>\n            <div className='tokenIdList'>\n              {tokenIdList && tokenIdList.map((item, index) => {\n                return (\n                  <div className='tokenId-box' key=\"index\">\n                    <div className='color-box' style={{ backgroundColor: colors[index] }}></div>\n                    <div className='tokenId-text'>{item}</div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n          :\n          <div className='no-nft-box'>\n            <img src={noNFT} alt=\"\" />\n            <div>\n              {type === \"add\" ? \"No DERI-ETH LP NFT in your wallet\" : \"No DERI-ETH LP NFT staked\"}\n            </div>\n          </div>\n      }\n\n      <div className='add-remove-btn'>\n        {!isApproved ? <Button width=\"331\" fontSize='18' disabled={disabled} label={approveBtnText} type={PRIMARY} onClick={clickApprove} /> : <Button width=\"331\" fontSize='18' disabled={disabled} label={type === \"add\" ? lang[\"add-liquidity\"] : lang[\"remove-liquidity\"]} type={PRIMARY} onClick={type === \"add\" ? addLiquidity : removeLiquidity} />}\n      </div>\n    </div >\n  )\n}\nexport default inject('wallet', 'poolManager')(observer(LpDetail))","import { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\n\nexport default function useContractCall(contract: Contract): (\n  method: string,\n  params: Array<any>,\n  options?: { value?: BigNumber; gasLimit?: BigNumber }) => Promise<TransactionResponse> {\n\n  return useMemo(() => {\n    return async (\n      method: string,\n      params: Array<any>,\n      options?: { value?: BigNumber; gasLimit?: BigNumber }\n    ) => {\n      return contract[method](...params, options)\n    }\n  }, [contract])\n}\n"],"sourceRoot":""}