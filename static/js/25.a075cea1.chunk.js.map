{"version":3,"sources":["utils/DeriNumberFormat.js","components/Pagination/IPagination.js","pages/Practice/img/logo-deri.svg","pages/Practice/Practice.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","IPagination","page","count","onPage","pageSize","onShowSizeChange","selectComponentClass","Select","onChange","current","total","prevIcon","token","nextIcon","showSizeChanger","locale","localeInfo","pageSizeOptions","inject","observer","lang","yourPnl","setYourPnl","setPage","pnlList","setPnlList","showPnlList","setShowPnlList","getYourPnl","a","apiProxy","request","detail","account","res","pnl","getEarnTopUsers","arr","map","item","formatAddress","slice","isConnected","src","deirLogo","alt","UnderlineText","text","tip","multiline","index","length","target","href","rel"],"mappings":"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","file":"static/js/25.a075cea1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport { toNonExponential, countDecimal } from './utils';\r\nimport { bg } from '../lib/web3js';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\nconst LoadLine = styled.span`\r\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\r\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\r\n`\r\nfunction DeriNumberFormat(props) {\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const isValidate = () => {\r\n    const { allowZero } = props\r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN')\r\n      || ((Math.abs(props.value)) === 0 && allowZero === true)\r\n  }\r\n  const renderText = value => value && value.replace(/\\.$/, '')\r\n\r\n  useEffect(() => {\r\n    const { allowZero, wallet, closeShowLoadingEffectAfterLoaded, defaultValue = '--', ...others } = props\r\n\r\n    if (isValidate()) {\r\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\r\n      if (others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0) {\r\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\r\n      }\r\n\r\n      if (others.decimalScale === -1 || ((+others.value) === 0 && allowZero)) {\r\n        delete others.decimalScale\r\n      }\r\n\r\n      //科学计数法\r\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : '' + others.value\r\n      if (others.value && /\\d+.9{6}/.test(others.value)) {\r\n        others.value = (+others.value).toFixed(5)\r\n      }\r\n      setRenderablity(<Wrapper {...others} renderText={renderText}\r\n        displayType='text' fixedDecimalScale={true} thousandSeparator={true} />)\r\n\r\n    } else if (firstTime) {\r\n      const { width, height } = props\r\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\r\n      if (closeShowLoadingEffectAfterLoaded) {\r\n        setFirstTime(false)\r\n      }\r\n    }\r\n    const timeout = window.setTimeout(() => {\r\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\r\n      if (!isValidate()) {\r\n        setRenderablity(defaultValue)\r\n      }\r\n    }, defaultValue === others.value ? 0 : 60000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value, props.decimalScale, props.suffix]);\r\n\r\n  return renderablity;\r\n}\r\nexport default DeriNumberFormat\r\n// export default inject('wallet')(observer(DeriNumberFormat))","import Pagination from 'rc-pagination'\r\nimport localeInfo from 'rc-pagination/lib/locale/en_US';\r\nimport Select from 'rc-select';\r\nimport 'rc-select/assets/index.less';\r\nimport Icon from '../Icon/Icon';\r\nimport './pagination.less'\r\nexport default function IPagination({page,count,onPage,pageSize,onShowSizeChange}){\r\n  return (\r\n    <div className='pagination' >\r\n      <Pagination \r\n        selectComponentClass={Select}\r\n        onChange={onPage}\r\n        current={page}\r\n        total={count}\r\n        pageSize={pageSize}\r\n        prevIcon={() => <Icon token='arrow-left'/>}\r\n        nextIcon={() => <Icon token='arrow-right'/>}\r\n        showSizeChanger\r\n        onShowSizeChange={onShowSizeChange}\r\n        locale={localeInfo}\r\n        pageSizeOptions={['10', '20','30', '50']}\r\n        />\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/logo-deri.8af5c8cc.svg\";","import { useState, useEffect } from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport UnderlineText from '../../components/UnderlineText/UnderlineText'\r\nimport { formatAddress } from '../../utils/utils'\r\nimport {bg} from '../../lib/web3js/index'\r\nimport 'rc-pagination/assets/index.less';\r\nimport 'rc-select/assets/index.less';\r\nimport deirLogo from './img/logo-deri.svg'\r\nimport IPagination from '../../components/Pagination/IPagination'\r\nimport './practice.less'\r\nfunction Practice({ lang, wallet }) {\r\n  const [yourPnl, setYourPnl] = useState();\r\n  const [page, setPage] = useState(1)\r\n  const [pnlList, setPnlList] = useState([])\r\n  const [showPnlList, setShowPnlList] = useState([])\r\n  const onPage = (page) => {\r\n    setPage(page)\r\n  }\r\n  const getYourPnl = async () => {\r\n    let res = await apiProxy.request(\"getUserEarnInfo\", [wallet.detail.account, 2])\r\n    if (res) {\r\n      let pnl = Math.abs(res.pnl)  < 10**-10 ? 0 : (res.pnl - 1) * 100\r\n      setYourPnl(pnl)\r\n    }\r\n  }\r\n  const getEarnTopUsers = async () => {\r\n    let res = await apiProxy.request('getEarnTop50Users', [2])\r\n    if (res) {\r\n      let arr = res.map(item => {\r\n        item.pnl =  Math.abs(item.pnl)  < 10**-10 ? 0 : (item.pnl - 1) * 100;\r\n        item.account = formatAddress(item.account)\r\n        return item\r\n      })\r\n      setPnlList(arr)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    let arr\r\n    if (page === 1) {\r\n      arr = pnlList.slice(0, page * 10)\r\n    } else {\r\n      arr = pnlList.slice((page - 1) * 10, page * 10)\r\n    }\r\n    setShowPnlList(arr)\r\n  }, [pnlList, page])\r\n  useEffect(() => {\r\n    if (wallet.isConnected()) {\r\n      getYourPnl()\r\n    }\r\n    getEarnTopUsers()\r\n  }, [wallet.detail, wallet])\r\n  return (\r\n    <div className='testnet-practice'>\r\n      <div className='practice-info'>\r\n        <div className='practice-title'>\r\n          {lang['practice-to-earn']}\r\n        </div>\r\n        <div className='practice-time'>\r\n          {/* {lang['time']} */}\r\n          Mar. 1st 09:00 AM (UTC) — Mar. 8th 09:00 AM (UTC)\r\n        </div>\r\n        <div className='practice-info-box'>\r\n          <div className='practice-info-left'>\r\n            <div className='total-rewards-pool'>\r\n              <div className='total-rewards-box'>\r\n                <div className='deri-logo'>\r\n                  <img src={deirLogo} alt='deri' />\r\n                </div>\r\n                <div className='total-rewards-num'>\r\n                  <div className='total-rewards-pool-title'>\r\n                    {lang['total-rewards-pool']}\r\n                  </div>\r\n                  <div className='toatl-rewards-deri'>\r\n                    <span>\r\n                      10,000\r\n                    </span>\r\n                    <span className='deri-text'>\r\n                      DERI\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='your-pnl'>\r\n              <span>\r\n                <UnderlineText text={lang['your-pnl']} tip={lang['your-pnl-tip']} multiline={true} />\r\n              </span>\r\n              <span className='your-pnl-pen'>\r\n                <DeriNumberFormat value={yourPnl} suffix='%' decimalScale={2} />\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className='practice-info-right'>\r\n            <div className='top-pnl-list-box'>\r\n              <div className='top-pnl-list-box-title'>\r\n                {/* {lang['top-pnl']} */}\r\n                Leaderboard\r\n              </div>\r\n              <div className='top-pnl-list'>\r\n                <div className='top-pnl-list-title'>\r\n                  <span>{lang['no']}</span>\r\n                  <span>{lang['user-addr']}</span>\r\n                  <span>{lang['pnl']}</span>\r\n                </div>\r\n                <div className='top-pnl-list-info'>\r\n                  {showPnlList.map((item, index) => {\r\n                    return (\r\n                      <div className='top-pnl-list-info-box' key={index}>\r\n                        <div className='no'>{item.index}</div>\r\n                        <div className='address'>{item.account}</div>\r\n                        <div className='pnl'>\r\n                          <DeriNumberFormat value={item.pnl} suffix='%' decimalScale={2} />\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='page-box'>\r\n              <IPagination page={page} onPage={onPage} count={pnlList.length} pageSize={10} />\r\n                <div className='remind'>* {lang['update-every-hour']}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='detailed-rules'>\r\n        <a target=\"_blank\" href=\"https://theontoteam.medium.com/1b958bc5228a\" rel='noreferrer' >\r\n          {lang['detailed-rules']}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default inject('wallet')(observer(Practice))"],"sourceRoot":""}