{"version":3,"sources":["utils/DeriNumberFormat.js","components/Pagination/IPagination.js","pages/Practice/img/logo-deri.svg","pages/Practice/Practice.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","IPagination","page","count","onPage","pageSize","onShowSizeChange","selectComponentClass","Select","onChange","current","total","prevIcon","token","nextIcon","showSizeChanger","locale","localeInfo","pageSizeOptions","inject","observer","lang","yourPnl","setYourPnl","setPage","pnlList","setPnlList","showPnlList","setShowPnlList","getYourPnl","apiProxy","request","detail","account","res","pnl","getEarnTopUsers","arr","map","item","formatAddress","slice","isConnected","src","deirLogo","alt","UnderlineText","text","tip","multiline","index","length","target","href","rel"],"mappings":"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","file":"static/js/25.c0788016.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toNonExponential, countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\nconst LoadLine = styled.span`\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\n`\nfunction DeriNumberFormat(props) {\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const isValidate = () => {\n    const { allowZero } = props\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN')\n      || ((Math.abs(props.value)) === 0 && allowZero === true)\n  }\n  const renderText = value => value && value.replace(/\\.$/, '')\n\n  useEffect(() => {\n    const { allowZero, wallet, closeShowLoadingEffectAfterLoaded, defaultValue = '--', ...others } = props\n\n    if (isValidate()) {\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\n      if (others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0) {\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\n      }\n\n      if (others.decimalScale === -1 || ((+others.value) === 0 && allowZero)) {\n        delete others.decimalScale\n      }\n\n      //科学计数法\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : '' + others.value\n      if (others.value && /\\d+.9{6}/.test(others.value)) {\n        others.value = (+others.value).toFixed(5)\n      }\n      setRenderablity(<Wrapper {...others} renderText={renderText}\n        displayType='text' fixedDecimalScale={true} thousandSeparator={true} />)\n\n    } else if (firstTime) {\n      const { width, height } = props\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\n      if (closeShowLoadingEffectAfterLoaded) {\n        setFirstTime(false)\n      }\n    }\n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if (!isValidate()) {\n        setRenderablity(defaultValue)\n      }\n    }, defaultValue === others.value ? 0 : 60000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value, props.decimalScale, props.suffix]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))","import Pagination from 'rc-pagination'\nimport localeInfo from 'rc-pagination/lib/locale/en_US';\nimport Select from 'rc-select';\nimport 'rc-select/assets/index.less';\nimport Icon from '../Icon/Icon';\nimport './pagination.less'\nexport default function IPagination({page,count,onPage,pageSize,onShowSizeChange}){\n  return (\n    <div className='pagination' >\n      <Pagination \n        selectComponentClass={Select}\n        onChange={onPage}\n        current={page}\n        total={count}\n        pageSize={pageSize}\n        prevIcon={() => <Icon token='arrow-left'/>}\n        nextIcon={() => <Icon token='arrow-right'/>}\n        showSizeChanger\n        onShowSizeChange={onShowSizeChange}\n        locale={localeInfo}\n        pageSizeOptions={['10', '20','30', '50']}\n        />\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/logo-deri.d4c8b6a2.svg\";","import { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport apiProxy from '../../model/ApiProxy'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport UnderlineText from '../../components/UnderlineText/UnderlineText'\nimport { formatAddress } from '../../utils/utils'\nimport {bg} from '../../lib/web3js/index'\nimport 'rc-pagination/assets/index.less';\nimport 'rc-select/assets/index.less';\nimport deirLogo from './img/logo-deri.svg'\nimport IPagination from '../../components/Pagination/IPagination'\nimport './practice.less'\nfunction Practice({ lang, wallet }) {\n  const [yourPnl, setYourPnl] = useState();\n  const [page, setPage] = useState(1)\n  const [pnlList, setPnlList] = useState([])\n  const [showPnlList, setShowPnlList] = useState([])\n  const onPage = (page) => {\n    setPage(page)\n  }\n  const getYourPnl = async () => {\n    let res = await apiProxy.request(\"getUserEarnInfo\", [wallet.detail.account, 2])\n    if (res) {\n      let pnl = Math.abs(res.pnl)  < 10**-10 ? 0 : (res.pnl - 1) * 100\n      setYourPnl(pnl)\n    }\n  }\n  const getEarnTopUsers = async () => {\n    let res = await apiProxy.request('getEarnTop50Users', [2])\n    if (res) {\n      let arr = res.map(item => {\n        item.pnl =  Math.abs(item.pnl)  < 10**-10 ? 0 : (item.pnl - 1) * 100;\n        item.account = formatAddress(item.account)\n        return item\n      })\n      setPnlList(arr)\n    }\n  }\n  useEffect(() => {\n    let arr\n    if (page === 1) {\n      arr = pnlList.slice(0, page * 10)\n    } else {\n      arr = pnlList.slice((page - 1) * 10, page * 10)\n    }\n    setShowPnlList(arr)\n  }, [pnlList, page])\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      getYourPnl()\n    }\n    getEarnTopUsers()\n  }, [wallet.detail, wallet])\n  return (\n    <div className='testnet-practice'>\n      <div className='practice-info'>\n        <div className='practice-title'>\n          {lang['practice-to-earn']}\n        </div>\n        <div className='practice-time'>\n          {/* {lang['time']} */}\n          Mar. 1st 09:00 AM (UTC) — Mar. 8th 09:00 AM (UTC)\n        </div>\n        <div className='practice-info-box'>\n          <div className='practice-info-left'>\n            <div className='total-rewards-pool'>\n              <div className='total-rewards-box'>\n                <div className='deri-logo'>\n                  <img src={deirLogo} alt='deri' />\n                </div>\n                <div className='total-rewards-num'>\n                  <div className='total-rewards-pool-title'>\n                    {lang['total-rewards-pool']}\n                  </div>\n                  <div className='toatl-rewards-deri'>\n                    <span>\n                      10,000\n                    </span>\n                    <span className='deri-text'>\n                      DERI\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='your-pnl'>\n              <span>\n                <UnderlineText text={lang['your-pnl']} tip={lang['your-pnl-tip']} multiline={true} />\n              </span>\n              <span className='your-pnl-pen'>\n                <DeriNumberFormat value={yourPnl} suffix='%' decimalScale={2} />\n              </span>\n            </div>\n          </div>\n          <div className='practice-info-right'>\n            <div className='top-pnl-list-box'>\n              <div className='top-pnl-list-box-title'>\n                {/* {lang['top-pnl']} */}\n                Leaderboard\n              </div>\n              <div className='top-pnl-list'>\n                <div className='top-pnl-list-title'>\n                  <span>{lang['no']}</span>\n                  <span>{lang['user-addr']}</span>\n                  <span>{lang['pnl']}</span>\n                </div>\n                <div className='top-pnl-list-info'>\n                  {showPnlList.map((item, index) => {\n                    return (\n                      <div className='top-pnl-list-info-box' key={index}>\n                        <div className='no'>{item.index}</div>\n                        <div className='address'>{item.account}</div>\n                        <div className='pnl'>\n                          <DeriNumberFormat value={item.pnl} suffix='%' decimalScale={2} />\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n            <div className='page-box'>\n              <IPagination page={page} onPage={onPage} count={pnlList.length} pageSize={10} />\n                <div className='remind'>* {lang['update-every-hour']}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='detailed-rules'>\n        <a target=\"_blank\" href=\"https://theontoteam.medium.com/1b958bc5228a\" rel='noreferrer' >\n          {lang['detailed-rules']}\n        </a>\n      </div>\n    </div>\n  )\n}\nexport default inject('wallet')(observer(Practice))"],"sourceRoot":""}