{"version":3,"sources":["pages/Pool/img/staked.svg","hooks/useContractLp.ts","pages/Pool/Card.js"],"names":["r","contractdescribers","useContract","name","chainId","contractAddress","wallet","useWallet","getContract","address","abi","ethereum","useMemo","provider","getProvider","networkVersion","String","Web3Provider","Contract","account","getSigner","connectUnchecked","getProviderOrSigner","pollingInterval","require","keys","forEach","key","path","split","last","length","substring","indexOf","PairAddress","Card","lang","pool","history","useHistory","defaultList","poolInfo","setPoolinfo","useState","setAddress","isStaked","setIsStaked","xvsNum","setXvsNum","show","setShow","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","totalYearDeri","setTotalYearDeri","accountEthTokenValue","setAccountEthTokenValue","apy","setApy","accountDeriToken","setAccountDeriToken","DeriforPairContract","EthforPairContract","PoolContract","BTokenContract","PairContract","getPoolInfo","useCallback","async","res","version","getLiquidity","DeriNumber","balanceOf","EthNumber","deriPath","process","REACT_APP_INFO_HTTP_URL","resp","fetch","json","ethPrice","axios","get","data","deriPrice","price","deriAmount","BigNumber","from","_hex","toString","ethAmount","liquidity","bg","times","toNumber","console","log","getIsStaked","poolAddress","bTime","setTimeout","contract","connect","map","obj","getSecondsPerLiquidityInsideX128","item","timestamp","secondsPerLiquidityInsideX128","Promise","all","aTime","getBTokenValue","positions","tickLower","tickUpper","tickCurrent","slot0","tick","amount","total_amount0","total_amount1","getAmountETHAndDeri","deri","eth","deriSum","reduce","accumulator","currentValue","ethSum","eresp","ethValue","getApy","sumValue","totalYearDeriValue","getTimeRewardInfo","rewards","find","id","secondsPerLiquidityInsideX128_a","reward","getRewardInBetween","Math","abs","oneYear","valuePerYear","onImgError","event","target","src","errorimg","useEffect","isConnected","getVenusEarned","detail","sess","sessionStorage","getItem","url","type","className","onClick","push","staking","retired","new","alt","BSC","POLYGON","ETH","ARBITRUM","networkLogo","zone","chain","toUpperCase","isLp","bTokens","bTokenSymbol","index","onError","singleBtoken","TokenExplode","value","suffix","displayType","allowZero","decimalScale","thousandSeparator","stakedLogo","width","disabled","outline","label","TokenWrapper","styled","div","Token","props","rotate","angle","filter","t","i","token","curRotate"],"mappings":"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","file":"static/js/8.8679ecb1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/staked.46571832.svg\";","import { Contract, ContractInterface } from \"@ethersproject/contracts\";\r\nimport {\r\n  JsonRpcProvider,\r\n  JsonRpcSigner,\r\n  Web3Provider,\r\n} from \"@ethersproject/providers\";\r\nimport { useMemo } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { getProvider } from \"../utils/utils\";\r\n\r\nconst contractdescribers = {};\r\n\r\nfunction importAll(r) {\r\n  return r.keys().forEach((key) => {\r\n    const path = key.split(\"/\");\r\n    const last = path[path.length - 1];\r\n    contractdescribers[last.substring(0, last.indexOf(\".\"))] = r(key);\r\n  });\r\n}\r\n\r\nimportAll(require.context(`../abis/`, true, /\\.json$/));\r\n\r\nexport default function useContract(\r\n  name: string,\r\n  chainId: number,\r\n  contractAddress: string,\r\n): Contract {\r\n  const wallet = useWallet();\r\n  const { address, abi } = getContract(name);\r\n  const { ethereum } = wallet;\r\n  if (address) {\r\n    contractAddress = address;\r\n  }\r\n  return useMemo(() => {\r\n    let provider = getProvider(chainId);\r\n    if (ethereum && ethereum.networkVersion === String(chainId)) {\r\n      provider = new Web3Provider(ethereum, \"any\");\r\n    }\r\n    if (!provider) {\r\n      return null;\r\n    }\r\n    return new Contract(\r\n      contractAddress,\r\n      abi,\r\n      getProviderOrSigner(provider, wallet.account),\r\n      {pollingInterval: 500}\r\n    );\r\n  }, [contractAddress, abi, wallet]);\r\n}\r\n\r\n// account is not optional\r\nfunction getSigner(provider: JsonRpcProvider, account: string): JsonRpcSigner {\r\n  return provider.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nfunction getProviderOrSigner(\r\n  provider: JsonRpcProvider,\r\n  account?: string\r\n): JsonRpcProvider | JsonRpcSigner {\r\n  return account ? getSigner(provider, account) : provider;\r\n}\r\n\r\nfunction getContract(name: string): ContractDescriber {\r\n  return contractdescribers[name];\r\n}\r\n\r\ninterface ContractDescriber {\r\n  address: string;\r\n  abi: ContractInterface;\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\r\nimport Button from '../../components/Button/Button'\r\nimport BSC from '../../assets/img/BNB.svg'\r\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\r\nimport POLYGON from '../../assets/img/polygon-logo.svg'\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport stakedLogo from './img/staked.svg'\r\nimport errorimg from '../../assets/img/ErrorImg.png'\r\nimport './card.less'\r\nimport styled, { StyleSheetManager } from 'styled-components';\r\nimport useContract from '../../hooks/useContractLp';\r\nimport { BigNumber } from 'ethers';\r\nimport { bg, getAmountETHAndDeri, getProvider } from '../../utils/utils';\r\nimport axios from 'axios';\r\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\r\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\r\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\r\nexport default function Card({ lang, pool, wallet }) {\r\n  const history = useHistory();\r\n  const defaultList = ['311860', '311904']\r\n  const [poolInfo, setPoolinfo] = useState({})\r\n  const [address, setAddress] = useState(pool.address)\r\n  const [isStaked, setIsStaked] = useState(false)\r\n  const [xvsNum, setXvsNum] = useState()\r\n  const [show, setShow] = useState(true)\r\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\r\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\r\n  const [totalYearDeri, setTotalYearDeri] = useState(0)\r\n  const [accountEthTokenValue, setAccountEthTokenValue] = useState(0)\r\n  const [apy, setApy] = useState()\r\n  const [accountDeriToken, setAccountDeriToken] = useState(0)\r\n  const DeriforPairContract = useContract(\"ERC20\", 42161, DeriAddress)\r\n  const EthforPairContract = useContract(\"ERC20\", 42161, ETHAddress)\r\n  const PoolContract = useContract(\"arbitrumLp\", 42161)\r\n  const BTokenContract = useContract(\"LpTokenId\", 42161)\r\n  const PairContract = useContract(\"PairAbi\", 42161)\r\n  const getPoolInfo = useCallback(async () => {\r\n    setPoolinfo({})\r\n    let res = await pool.getPoolInfo(pool.address, pool.chainId, pool.version)\r\n    setAddress(pool.address)\r\n    setPoolinfo(res)\r\n\r\n  }, [pool])\r\n  const getLiquidity = useCallback(async () => {\r\n    setPoolinfo({})\r\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\r\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\r\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\r\n    let resp = await fetch(deriPath);\r\n    let res = await resp.json();\r\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\r\n    let eresp = await axios.get(ethPath);\r\n    let ethPrice = eresp.data[\"ETHUSD\"]\r\n    let deriPrice = res.data.price;\r\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\r\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\r\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\r\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\r\n    let liquidity = deriValue + ethValue\r\n    console.log(\"getLiquidity\", liquidity)\r\n    setPoolinfo({\r\n      liquidity: liquidity,\r\n    })\r\n  }, [DeriforPairContract, EthforPairContract])\r\n  const getVenusEarned = async () => {\r\n    if (pool && (pool.version === 'v3' || pool.version === 'v3_lite')) {\r\n      let res = await pool.getVenusEarned(wallet, pool.address)\r\n      setXvsNum(res)\r\n    }\r\n  }\r\n  const getIsStaked = useCallback(async () => {\r\n    let res = await pool.getIsStaked(wallet, pool)\r\n    if (res) {\r\n      setIsStaked(res.isStaked)\r\n      setAddress(res.poolAddress)\r\n    }\r\n  }, [wallet, pool])\r\n\r\n  const bTime = useCallback(async (id) => {\r\n    let res;\r\n    await setTimeout(async () => {\r\n      let provider = getProvider(42161);\r\n      let contract = await PoolContract.connect(provider)\r\n      console.log(\"bTime\", contract)\r\n      let data = defaultList.map(async (item) => {\r\n        let obj = {}\r\n        let res = await contract.getSecondsPerLiquidityInsideX128(item)\r\n        if (res) {\r\n          obj[\"id\"] = item\r\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n        }\r\n        return obj\r\n      })\r\n      data = await Promise.all(data)\r\n      setBTimeRewardInfo(data)\r\n    }, 1000);\r\n    return res\r\n  }, [PoolContract])\r\n\r\n  const aTime = useCallback(async () => {\r\n    let data = defaultList.map(async (item) => {\r\n      let obj = {}\r\n      let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\r\n      if (res) {\r\n        obj[\"id\"] = item\r\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n      }\r\n      console.log(\"aTime res\", res)\r\n      return obj\r\n    })\r\n    data = await Promise.all(data)\r\n    bTime()\r\n    setATimeRewardInfo(data)\r\n  }, [PoolContract])\r\n\r\n  const getBTokenValue = useCallback(async () => {\r\n    let data = defaultList.map(async (item) => {\r\n      let obj = {}\r\n      let res = await BTokenContract.positions(item)\r\n      obj = {\r\n        tickLower: res.tickLower,\r\n        tickUpper: res.tickUpper,\r\n        liquidity: BigNumber.from(res.liquidity._hex).toString()\r\n      }\r\n      return obj\r\n    })\r\n    data = await Promise.all(data)\r\n    let tickCurrent = await PairContract.slot0()\r\n    tickCurrent = tickCurrent.tick\r\n    let amount = data.map((item) => {\r\n      let [total_amount0, total_amount1] = getAmountETHAndDeri(tickCurrent, item.tickLower, item.tickUpper, item.liquidity)\r\n      return {\r\n        deri: total_amount0 / 10 ** 18,\r\n        eth: total_amount1 / 10 ** 18\r\n      }\r\n    })\r\n    let deriSum = amount.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue.deri;\r\n    }, 0)\r\n    let ethSum = amount.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue.eth;\r\n    }, 0)\r\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\r\n    let eresp = await axios.get(ethPath);\r\n    console.log(\"ETHUSD\",eresp.data)\r\n    let ethPrice = eresp.data[\"ETHUSD\"]\r\n    let ethValue = bg(ethSum).times(ethPrice).toNumber();\r\n    setAccountEthTokenValue(ethValue)\r\n    setAccountDeriToken(deriSum)\r\n  }, [BTokenContract, defaultList, PairContract])\r\n\r\n  const getApy = useCallback(async () => {\r\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\r\n      let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\r\n      let resp = await fetch(deriPath);\r\n      let res = await resp.json();\r\n      let deriPrice = res.data.price;\r\n      let deriValue = bg(accountDeriToken).times(deriPrice).toNumber();\r\n      let sumValue = deriValue + accountEthTokenValue\r\n      let totalYearDeriValue = bg(totalYearDeri).times(deriPrice).toNumber();\r\n      let apy = (totalYearDeriValue / sumValue) * 100\r\n      setApy(apy)\r\n    }\r\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\r\n\r\n  const getTimeRewardInfo = useCallback(async () => {\r\n    console.log(\"getTimeRewardInfo\", aTimeRewardInfo, bTimeRewardInfo)\r\n    let rewards = bTimeRewardInfo.map(async (item) => {\r\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\r\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\r\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\r\n      if (reward) {\r\n        let obj = {\r\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\r\n          id: item.id,\r\n          timestamp: Math.abs(item.timestamp - aTime.timestamp)\r\n        }\r\n        return obj\r\n      }\r\n    })\r\n    rewards = await Promise.all(rewards)\r\n    console.log(\"getTimeRewardInfo\", rewards)\r\n    if (rewards[0].timestamp !== 0) {\r\n      const totalScore = rewards.reduce((accumulator, currentValue) => {\r\n        return accumulator + currentValue.reward;\r\n      }, 0);\r\n      const oneYear = 1000 * 60 * 60 * 24 * 365;\r\n      const valuePerYear = (totalScore / (rewards[0].timestamp * 1000)) * oneYear;\r\n      setTotalYearDeri(valuePerYear)\r\n    }\r\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n  const onImgError = (event) => {\r\n    event.target.src = errorimg\r\n  }\r\n  const closeSymbol = (address) => {\r\n    sessionStorage.setItem(address, false)\r\n    setShow(false)\r\n  }\r\n  useEffect(() => {\r\n    if (pool.version === 'ulp' && DeriforPairContract) {\r\n      getLiquidity()\r\n    } else {\r\n      getPoolInfo()\r\n    }\r\n    if (wallet.isConnected()) {\r\n      getIsStaked()\r\n      getVenusEarned()\r\n    }\r\n  }, [pool, wallet.detail.account, DeriforPairContract, EthforPairContract])\r\n  useEffect(() => {\r\n    let sess = sessionStorage.getItem(pool.address)\r\n    if (sess !== null) {\r\n      if (sess) {\r\n        setShow(false)\r\n      }\r\n    }\r\n  }, [pool])\r\n  const networkLogo = (chainId) => {\r\n    let src;\r\n    if (chainId === \"56\" || chainId === \"97\") {\r\n      src = BSC\r\n    } else if (chainId === \"137\") {\r\n      src = POLYGON\r\n    } else if (chainId === \"1\") {\r\n      src = ETH\r\n    } else if (chainId === '42161' || chainId === '421611' || chainId === '421613') {\r\n      src = ARBITRUM\r\n    }\r\n    return src\r\n  }\r\n  const staking = (url) => {\r\n    if (pool.version === 'v2_lite_open') {\r\n      return\r\n    }\r\n    history.push(url)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pool.version === \"ulp\" && PoolContract) {\r\n      setATimeRewardInfo([])\r\n      setBTimeRewardInfo([])\r\n      setApy()\r\n      aTime()\r\n    }\r\n  }, [pool.version, PoolContract])\r\n  useEffect(() => {\r\n    if (pool.version === \"ulp\" && BTokenContract && PairContract) {\r\n      getBTokenValue()\r\n    }\r\n  }, [BTokenContract, pool.version, PairContract])\r\n\r\n  useEffect(() => {\r\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\r\n      getApy()\r\n    }\r\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\r\n\r\n  useEffect(() => {\r\n    if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\r\n      getTimeRewardInfo()\r\n    }\r\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n  const url = pool.version === 'ulp' ? `/lppool/${pool.chainId}/${pool.address}` : `/pool/${pool.version || 'v1'}/${pool.chainId}/${pool.type}/${pool.address}`\r\n  return (\r\n    <div className={`${pool.address === '0x243681B8Cd79E3823fF574e07B2378B8Ab292c1E' ? 'showGuide' : ''} card-box`}>\r\n      <div className={pool.version === 'v2_lite_open' ? 'card-list open-list' : 'card-list'} onClick={() => { staking(url) }} >\r\n        <div className={`card-header ${pool.retired ? `${pool.version}` : \"\"} ${pool.new ? \"new\" : ''}`}>\r\n          <div className='pool-network-type'>\r\n            <div className='network-logo'>\r\n              <img alt='' src={networkLogo(pool.chainId)} />\r\n            </div>\r\n            <div className='pool-type-network-text'>\r\n              <div className='pool-type-text'>\r\n                {pool.address !== '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\r\n                  {lang[pool.type]} {lang[pool.zone]}\r\n                </>}\r\n                {pool.address === \"0x1eF92eDA3CFeefb8Dae0DB4507f860d3b73f29BA\" && <>\r\n                  DERI-based\r\n                </>}\r\n                {pool.address === '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\r\n                  {lang[pool.zone]}\r\n                </>}\r\n              </div>\r\n              <div className='pool-network-text'>\r\n                {pool.chain.toUpperCase() === 'BSC' ? \"BNB Chain\" : pool.chain.toUpperCase()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='base-token-logo'>\r\n            {pool.isLp && <>\r\n              <div className='lp-base-token-bg'>\r\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}></div>\r\n                <span className='lp-con'>+</span>\r\n                <div className={`base-token-bg ${pool.bTokens[1].bTokenSymbol}`}></div>\r\n              </div>\r\n            </>}\r\n            {!pool.isLp && pool.version !== 'v3' && pool.version !== \"v3_lite\" && <>\r\n              {pool.bTokens.map((item, index) => <div key={index} className='base-token-box-bg no-animation-tokens'>\r\n                <div className={`base-token-bg ${item.bTokenSymbol}`}>\r\n                  {pool.version === 'v2_lite_open' && <>\r\n                    <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${item.bTokenSymbol}.png`} />\r\n                  </>}\r\n                </div>\r\n              </div>)}\r\n            </>}\r\n            {(pool.version === \"v3\" || pool.version === \"v3_lite\") && (!pool.singleBtoken) &&\r\n              <TokenExplode bTokens={pool.bTokens} />\r\n            }\r\n            {\r\n              (pool.version === \"v3\" || pool.version === \"v3_lite\") && (pool.singleBtoken) &&\r\n              <div className='base-token-box-bg no-animation-tokens'>\r\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='card-content'>\r\n\r\n          <div className='max-apy'>\r\n            {pool.version !== 'v2_lite_open' && <>\r\n              <div className='max-apy-title'>\r\n                {(pool.version === 'v2' || pool.version === \"v3_lite\" || pool.version === \"v3\") ? lang['max-apy'] : lang['apy']}\r\n              </div>\r\n              <div className='max-apy-num'>\r\n                <DeriNumberFormat value={pool.version === \"ulp\" ? apy : poolInfo.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\r\n              </div>\r\n            </>}\r\n          </div>\r\n          <div className='total-pool-liquidity'>\r\n            <div className='total-liquidity-title'>\r\n              {lang['total-pool-liquidity']}\r\n            </div>\r\n            <div className='total-liquidity-num'>\r\n              <DeriNumberFormat value={poolInfo.liquidity} displayType='text' thousandSeparator={true} decimalScale={pool.type === 'lp' ? pool.version === \"ulp\" ? 0 : 7 : 0} />\r\n            </div>\r\n          </div>\r\n          <div className='your-deri-epoch'>\r\n            {isStaked && address === pool.address && <div className='staked-box'>\r\n              <img src={stakedLogo} alt='' />\r\n              {lang['staked']}\r\n            </div>}\r\n            {(+xvsNum > 0) && (pool.version === 'v3' || pool.version === 'v3_lite') && <span className='xvs-collectable'><div className='staked-box'><DeriNumberFormat width='50px' value={xvsNum} displayType='text' thousandSeparator={true} decimalScale={2} /> &nbsp; XVS  {lang['collectable']}</div></span>}\r\n          </div>\r\n          <div className='stake-button'>\r\n            <Button disabled={pool.version === 'v2_lite_open' ? true : false} className='button' outline label={pool.version === 'v2_lite_open' ? lang['operating'] : lang['stake']} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {pool.version === \"v3_lite\" && show &&\r\n        <div className='new-symbol'>\r\n          <div className='new-symbol-text'>\r\n            New Listing : <a rel=\"noreferrer\" href='https://deri.io/#/trade/futures/FITFIUSDT' target=\"_blank\" >FITFIUSDT</a> <a href='https://deri.io/#/trade/futures/AVAXUSDT' rel=\"noreferrer\" target=\"_blank\">AVAXUSDT</a>\r\n          </div>\r\n          <div className='close-symbol'>\r\n            <img src={close} alt='close' onClick={() => closeSymbol(pool.address)} />\r\n          </div>\r\n        </div>\r\n      } */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst TokenWrapper = styled.div`\r\n  @-webkit-keyframes explode {\r\n    0% {\r\n        transform: translateX(0px);\r\n        -moz-transform : translateX(0px);\r\n    }\r\n    100% {\r\n        transform: translateX(100px);\r\n        -moz-transform : translateX(100px);\r\n    }\r\n  }\r\n\r\n  @keyframes explode {\r\n    0% {\r\n        transform: translateX(0px);\r\n        -moz-transform : translateX(0px);\r\n    }\r\n    100% {\r\n        transform: translateX(100px) ;\r\n        -moz-transform : translateX(100px) ;\r\n    }\r\n  }\r\n  .base-token{\r\n    margin-left: 0px !important;\r\n    z-index : -2;\r\n    visibility: hidden;\r\n    background-color: #111e34;\r\n    border : 1px solid #fff;\r\n  }\r\n  @media only screen and (max-width: 760px) {\r\n    .base-token{\r\n      display:none;\r\n    }\r\n  }\r\n  .base-token-box-bg.explode:hover .move  {\r\n    -webkit-animation : explode .4s .0s linear;\r\n    -moz-animation :  explode .4s .0s linear;\r\n    animation: explode .4s .0s linear;\r\n    visibility: visible;    \r\n  }\r\n  \r\n  .base-token-box-bg.explode:hover .base-token {\r\n    z-index : 2 !important;\r\n  } \r\n\r\n`\r\nconst Token = styled.div`\r\n  position: absolute;\r\n  transform : ${props => `rotate(${-props.rotate}deg)`};\r\n  width: 48px;\r\n  height: 48px;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  .move {\r\n    transform : translateX(100px) ${props => `rotate(${props.rotate}deg)`};\r\n  }\r\n`\r\n\r\nconst TokenExplode = ({ bTokens = [] }) => {\r\n  const angle = 360 / bTokens.length\r\n  return (\r\n    <TokenWrapper className='v3-tokens'>\r\n      <div className='tokens'>\r\n        {bTokens.filter((t, i) => i < 3).map((token, index) => (\r\n          <div className='base-token-box-bg' key={index}>\r\n            <div className={`base-token-bg ${token.bTokenSymbol}`}>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='base-token-box-bg explode'>\r\n        <div className={'base-token-bg num-token'}>\r\n          {bTokens.length - 3} +\r\n        </div>\r\n        {bTokens.map((token, index) => {\r\n          const curRotate = angle * index\r\n          return (\r\n            <Token className='base-token' rotate={curRotate} width='100' key={index}>\r\n              <div width='100' rotate={curRotate} className={`base-token-bg move ${token.bTokenSymbol}`} >\r\n              </div>\r\n            </Token>\r\n          )\r\n        })}\r\n      </div>\r\n    </TokenWrapper>\r\n  )\r\n}"],"sourceRoot":""}